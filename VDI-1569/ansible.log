2018-08-30 12:25:16,648 p=5907 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:25:16,658 p=5907 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:25:16,685 p=5907 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:25:16,691 p=5907 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:25:16,710 p=5907 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:25:16,715 p=5907 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:25:16,735 p=5907 u=root |  ok: [localhost]
2018-08-30 12:25:16,752 p=5907 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:25:17,407 p=5907 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:25:17,416 p=5907 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:25:17,422 p=5907 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:25:17,430 p=5907 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:25:17,456 p=5907 u=root |  ok: [localhost]
2018-08-30 12:25:17,461 p=5907 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:25:17,489 p=5907 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:25:17,491 p=5907 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:25:17,495 p=5907 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:25:17,505 p=5907 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:25:17,522 p=5907 u=root |  skipping: [localhost]
2018-08-30 12:25:17,530 p=5907 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:25:18,052 p=5907 u=root |  ok: [localhost]
2018-08-30 12:25:18,060 p=5907 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:25:18,085 p=5907 u=root |  ok: [localhost]
2018-08-30 12:25:18,092 p=5907 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:25:18,514 p=5907 u=root |  ok: [localhost]
2018-08-30 12:25:18,517 p=5907 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:25:18,664 p=5907 u=root |  ok: [localhost] => {
    "roles": {
        "api_version": "1.30", 
        "cache_control": "no-cache, no-store, must-revalidate", 
        "changed": false, 
        "connection": "close", 
        "content_type": "application/json", 
        "cookies": {}, 
        "date": "Thu, 30 Aug 2018 12:25:18 GMT", 
        "docker_experimental": "false", 
        "failed": false, 
        "json": [
            {
                "id": "scheduler", 
                "name": "Scheduler", 
                "operations": {
                    "Node": {
                        "Node Schedule": [], 
                        "Node View": []
                    }
                }, 
                "system_role": true
            }, 
            {
                "id": "none", 
                "name": "None", 
                "operations": {}, 
                "system_role": true
            }, 
            {
                "id": "viewonly", 
                "name": "View Only", 
                "operations": {
                    "Config": {
                        "Config View": []
                    }, 
                    "Container": {
                        "Container Logs": [], 
                        "Container Stats": [], 
                        "Container Top": [], 
                        "Container View": []
                    }, 
                    "Image": {
                        "Image History": [], 
                        "Image View": []
                    }, 
                    "Kubernetes Certificate Signing Request": {
                        "Kubernetes Certificate Signing Request Get": [], 
                        "Kubernetes Certificate Signing Request List": [], 
                        "Kubernetes Certificate Signing Request Watch": []
                    }, 
                    "Kubernetes Certificate Signing Request/approval": {
                        "Kubernetes Certificate Signing Request/approval Get": [], 
                        "Kubernetes Certificate Signing Request/approval List": [], 
                        "Kubernetes Certificate Signing Request/approval Watch": []
                    }, 
                    "Kubernetes Certificate Signing Request/status": {
                        "Kubernetes Certificate Signing Request/status Get": [], 
                        "Kubernetes Certificate Signing Request/status List": [], 
                        "Kubernetes Certificate Signing Request/status Watch": []
                    }, 
                    "Kubernetes Cluster Role": {
                        "Kubernetes Cluster Role Get": [], 
                        "Kubernetes Cluster Role List": [], 
                        "Kubernetes Cluster Role Watch": []
                    }, 
                    "Kubernetes Cluster Role Binding": {
                        "Kubernetes Cluster Role Binding Get": [], 
                        "Kubernetes Cluster Role Binding List": [], 
                        "Kubernetes Cluster Role Binding Watch": []
                    }, 
                    "Kubernetes Cluster Role Binding/status": {
                        "Kubernetes Cluster Role Binding/status Get": [], 
                        "Kubernetes Cluster Role Binding/status List": [], 
                        "Kubernetes Cluster Role Binding/status Watch": []
                    }, 
                    "Kubernetes Cluster Role/status": {
                        "Kubernetes Cluster Role/status Get": [], 
                        "Kubernetes Cluster Role/status List": [], 
                        "Kubernetes Cluster Role/status Watch": []
                    }, 
                    "Kubernetes Component Status": {
                        "Kubernetes Component Status Get": [], 
                        "Kubernetes Component Status List": [], 
                        "Kubernetes Component Status Watch": []
                    }, 
                    "Kubernetes Component Status/status": {
                        "Kubernetes Component Status/status Get": [], 
                        "Kubernetes Component Status/status List": [], 
                        "Kubernetes Component Status/status Watch": []
                    }, 
                    "Kubernetes Config Map": {
                        "Kubernetes Config Map Get": [], 
                        "Kubernetes Config Map List": [], 
                        "Kubernetes Config Map Watch": []
                    }, 
                    "Kubernetes Config Map/status": {
                        "Kubernetes Config Map/status Get": [], 
                        "Kubernetes Config Map/status List": [], 
                        "Kubernetes Config Map/status Watch": []
                    }, 
                    "Kubernetes Controller Revision": {
                        "Kubernetes Controller Revision Get": [], 
                        "Kubernetes Controller Revision List": [], 
                        "Kubernetes Controller Revision Watch": []
                    }, 
                    "Kubernetes Controller Revision/status": {
                        "Kubernetes Controller Revision/status Get": [], 
                        "Kubernetes Controller Revision/status List": [], 
                        "Kubernetes Controller Revision/status Watch": []
                    }, 
                    "Kubernetes Cron Job": {
                        "Kubernetes Cron Job Get": [], 
                        "Kubernetes Cron Job List": [], 
                        "Kubernetes Cron Job Watch": []
                    }, 
                    "Kubernetes Cron Job/status": {
                        "Kubernetes Cron Job/status Get": [], 
                        "Kubernetes Cron Job/status List": [], 
                        "Kubernetes Cron Job/status Watch": []
                    }, 
                    "Kubernetes Custom Resource Definition": {
                        "Kubernetes Custom Resource Definition Get": [], 
                        "Kubernetes Custom Resource Definition List": [], 
                        "Kubernetes Custom Resource Definition Watch": []
                    }, 
                    "Kubernetes Custom Resource Definition/status": {
                        "Kubernetes Custom Resource Definition/status Get": [], 
                        "Kubernetes Custom Resource Definition/status List": [], 
                        "Kubernetes Custom Resource Definition/status Watch": []
                    }, 
                    "Kubernetes Daemonset": {
                        "Kubernetes Daemonset Get": [], 
                        "Kubernetes Daemonset List": [], 
                        "Kubernetes Daemonset Watch": []
                    }, 
                    "Kubernetes Daemonset/status": {
                        "Kubernetes Daemonset/status Get": [], 
                        "Kubernetes Daemonset/status List": [], 
                        "Kubernetes Daemonset/status Watch": []
                    }, 
                    "Kubernetes Deployment": {
                        "Kubernetes Deployment Get": [], 
                        "Kubernetes Deployment List": [], 
                        "Kubernetes Deployment Watch": []
                    }, 
                    "Kubernetes Deployment/rollback": {
                        "Kubernetes Deployment/rollback Get": [], 
                        "Kubernetes Deployment/rollback List": [], 
                        "Kubernetes Deployment/rollback Watch": []
                    }, 
                    "Kubernetes Deployment/scale": {
                        "Kubernetes Deployment/scale Get": [], 
                        "Kubernetes Deployment/scale List": [], 
                        "Kubernetes Deployment/scale Watch": []
                    }, 
                    "Kubernetes Deployment/status": {
                        "Kubernetes Deployment/status Get": [], 
                        "Kubernetes Deployment/status List": [], 
                        "Kubernetes Deployment/status Watch": []
                    }, 
                    "Kubernetes Endpoint": {
                        "Kubernetes Endpoint Get": [], 
                        "Kubernetes Endpoint List": [], 
                        "Kubernetes Endpoint Watch": []
                    }, 
                    "Kubernetes Endpoint/status": {
                        "Kubernetes Endpoint/status Get": [], 
                        "Kubernetes Endpoint/status List": [], 
                        "Kubernetes Endpoint/status Watch": []
                    }, 
                    "Kubernetes Event": {
                        "Kubernetes Event Get": [], 
                        "Kubernetes Event List": [], 
                        "Kubernetes Event Watch": []
                    }, 
                    "Kubernetes Event/status": {
                        "Kubernetes Event/status Get": [], 
                        "Kubernetes Event/status List": [], 
                        "Kubernetes Event/status Watch": []
                    }, 
                    "Kubernetes External Admission Hook Configuration": {
                        "Kubernetes External Admission Hook Configuration Get": [], 
                        "Kubernetes External Admission Hook Configuration List": [], 
                        "Kubernetes External Admission Hook Configuration Watch": []
                    }, 
                    "Kubernetes External Admission Hook Configuration/status": {
                        "Kubernetes External Admission Hook Configuration/status Get": [], 
                        "Kubernetes External Admission Hook Configuration/status List": [], 
                        "Kubernetes External Admission Hook Configuration/status Watch": []
                    }, 
                    "Kubernetes Horizontal Pod Autoscaler": {
                        "Kubernetes Horizontal Pod Autoscaler Get": [], 
                        "Kubernetes Horizontal Pod Autoscaler List": [], 
                        "Kubernetes Horizontal Pod Autoscaler Watch": []
                    }, 
                    "Kubernetes Horizontal Pod Autoscaler/status": {
                        "Kubernetes Horizontal Pod Autoscaler/status Get": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status List": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Watch": []
                    }, 
                    "Kubernetes Ingress": {
                        "Kubernetes Ingress Get": [], 
                        "Kubernetes Ingress List": [], 
                        "Kubernetes Ingress Watch": []
                    }, 
                    "Kubernetes Ingress/status": {
                        "Kubernetes Ingress/status Get": [], 
                        "Kubernetes Ingress/status List": [], 
                        "Kubernetes Ingress/status Watch": []
                    }, 
                    "Kubernetes Initializer Configuration": {
                        "Kubernetes Initializer Configuration Get": [], 
                        "Kubernetes Initializer Configuration List": [], 
                        "Kubernetes Initializer Configuration Watch": []
                    }, 
                    "Kubernetes Initializer Configuration/status": {
                        "Kubernetes Initializer Configuration/status Get": [], 
                        "Kubernetes Initializer Configuration/status List": [], 
                        "Kubernetes Initializer Configuration/status Watch": []
                    }, 
                    "Kubernetes Job": {
                        "Kubernetes Job Get": [], 
                        "Kubernetes Job List": [], 
                        "Kubernetes Job Watch": []
                    }, 
                    "Kubernetes Job/status": {
                        "Kubernetes Job/status Get": [], 
                        "Kubernetes Job/status List": [], 
                        "Kubernetes Job/status Watch": []
                    }, 
                    "Kubernetes Limit Range": {
                        "Kubernetes Limit Range Get": [], 
                        "Kubernetes Limit Range List": [], 
                        "Kubernetes Limit Range Watch": []
                    }, 
                    "Kubernetes Limit Range/status": {
                        "Kubernetes Limit Range/status Get": [], 
                        "Kubernetes Limit Range/status List": [], 
                        "Kubernetes Limit Range/status Watch": []
                    }, 
                    "Kubernetes Namespace": {
                        "Kubernetes Namespace Get": [], 
                        "Kubernetes Namespace List": [], 
                        "Kubernetes Namespace Watch": []
                    }, 
                    "Kubernetes Namespace/expansion": {
                        "Kubernetes Namespace/expansion Get": [], 
                        "Kubernetes Namespace/expansion List": [], 
                        "Kubernetes Namespace/expansion Watch": []
                    }, 
                    "Kubernetes Namespace/status": {
                        "Kubernetes Namespace/status Get": [], 
                        "Kubernetes Namespace/status List": [], 
                        "Kubernetes Namespace/status Watch": []
                    }, 
                    "Kubernetes Network Policy": {
                        "Kubernetes Network Policy Get": [], 
                        "Kubernetes Network Policy List": [], 
                        "Kubernetes Network Policy Watch": []
                    }, 
                    "Kubernetes Network Policy/status": {
                        "Kubernetes Network Policy/status Get": [], 
                        "Kubernetes Network Policy/status List": [], 
                        "Kubernetes Network Policy/status Watch": []
                    }, 
                    "Kubernetes Node": {
                        "Kubernetes Node Get": [], 
                        "Kubernetes Node List": [], 
                        "Kubernetes Node Watch": []
                    }, 
                    "Kubernetes Node/log": {
                        "Kubernetes Node/log Get": [], 
                        "Kubernetes Node/log List": [], 
                        "Kubernetes Node/log Watch": []
                    }, 
                    "Kubernetes Node/metrics": {
                        "Kubernetes Node/metrics Get": [], 
                        "Kubernetes Node/metrics List": [], 
                        "Kubernetes Node/metrics Watch": []
                    }, 
                    "Kubernetes Node/proxy": {
                        "Kubernetes Node/proxy Get": [], 
                        "Kubernetes Node/proxy List": [], 
                        "Kubernetes Node/proxy Watch": []
                    }, 
                    "Kubernetes Node/spec": {
                        "Kubernetes Node/spec Get": [], 
                        "Kubernetes Node/spec List": [], 
                        "Kubernetes Node/spec Watch": []
                    }, 
                    "Kubernetes Node/stats": {
                        "Kubernetes Node/stats Get": [], 
                        "Kubernetes Node/stats List": [], 
                        "Kubernetes Node/stats Watch": []
                    }, 
                    "Kubernetes Node/status": {
                        "Kubernetes Node/status Get": [], 
                        "Kubernetes Node/status List": [], 
                        "Kubernetes Node/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume": {
                        "Kubernetes Persistent Volume Get": [], 
                        "Kubernetes Persistent Volume List": [], 
                        "Kubernetes Persistent Volume Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim": {
                        "Kubernetes Persistent Volume Claim Get": [], 
                        "Kubernetes Persistent Volume Claim List": [], 
                        "Kubernetes Persistent Volume Claim Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim/status": {
                        "Kubernetes Persistent Volume Claim/status Get": [], 
                        "Kubernetes Persistent Volume Claim/status List": [], 
                        "Kubernetes Persistent Volume Claim/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume/status": {
                        "Kubernetes Persistent Volume/status Get": [], 
                        "Kubernetes Persistent Volume/status List": [], 
                        "Kubernetes Persistent Volume/status Watch": []
                    }, 
                    "Kubernetes Pod": {
                        "Kubernetes Pod Get": [], 
                        "Kubernetes Pod List": [], 
                        "Kubernetes Pod Watch": []
                    }, 
                    "Kubernetes Pod Disruption Budget": {
                        "Kubernetes Pod Disruption Budget Get": [], 
                        "Kubernetes Pod Disruption Budget List": [], 
                        "Kubernetes Pod Disruption Budget Watch": []
                    }, 
                    "Kubernetes Pod Disruption Budget/status": {
                        "Kubernetes Pod Disruption Budget/status Get": [], 
                        "Kubernetes Pod Disruption Budget/status List": [], 
                        "Kubernetes Pod Disruption Budget/status Watch": []
                    }, 
                    "Kubernetes Pod Preset": {
                        "Kubernetes Pod Preset Get": [], 
                        "Kubernetes Pod Preset List": [], 
                        "Kubernetes Pod Preset Watch": []
                    }, 
                    "Kubernetes Pod Preset/status": {
                        "Kubernetes Pod Preset/status Get": [], 
                        "Kubernetes Pod Preset/status List": [], 
                        "Kubernetes Pod Preset/status Watch": []
                    }, 
                    "Kubernetes Pod Security Policy": {
                        "Kubernetes Pod Security Policy Get": [], 
                        "Kubernetes Pod Security Policy List": [], 
                        "Kubernetes Pod Security Policy Watch": []
                    }, 
                    "Kubernetes Pod Security Policy/status": {
                        "Kubernetes Pod Security Policy/status Get": [], 
                        "Kubernetes Pod Security Policy/status List": [], 
                        "Kubernetes Pod Security Policy/status Watch": []
                    }, 
                    "Kubernetes Pod Template": {
                        "Kubernetes Pod Template Get": [], 
                        "Kubernetes Pod Template List": [], 
                        "Kubernetes Pod Template Watch": []
                    }, 
                    "Kubernetes Pod Template/status": {
                        "Kubernetes Pod Template/status Get": [], 
                        "Kubernetes Pod Template/status List": [], 
                        "Kubernetes Pod Template/status Watch": []
                    }, 
                    "Kubernetes Pod/attach": {
                        "Kubernetes Pod/attach Get": [], 
                        "Kubernetes Pod/attach List": [], 
                        "Kubernetes Pod/attach Watch": []
                    }, 
                    "Kubernetes Pod/binding": {
                        "Kubernetes Pod/binding Get": [], 
                        "Kubernetes Pod/binding List": [], 
                        "Kubernetes Pod/binding Watch": []
                    }, 
                    "Kubernetes Pod/eviction": {
                        "Kubernetes Pod/eviction Get": [], 
                        "Kubernetes Pod/eviction List": [], 
                        "Kubernetes Pod/eviction Watch": []
                    }, 
                    "Kubernetes Pod/exec": {
                        "Kubernetes Pod/exec Get": [], 
                        "Kubernetes Pod/exec List": [], 
                        "Kubernetes Pod/exec Watch": []
                    }, 
                    "Kubernetes Pod/log": {
                        "Kubernetes Pod/log Get": [], 
                        "Kubernetes Pod/log List": [], 
                        "Kubernetes Pod/log Watch": []
                    }, 
                    "Kubernetes Pod/portforward": {
                        "Kubernetes Pod/portforward Get": [], 
                        "Kubernetes Pod/portforward List": [], 
                        "Kubernetes Pod/portforward Watch": []
                    }, 
                    "Kubernetes Pod/proxy": {
                        "Kubernetes Pod/proxy Get": [], 
                        "Kubernetes Pod/proxy List": [], 
                        "Kubernetes Pod/proxy Watch": []
                    }, 
                    "Kubernetes Pod/status": {
                        "Kubernetes Pod/status Get": [], 
                        "Kubernetes Pod/status List": [], 
                        "Kubernetes Pod/status Watch": []
                    }, 
                    "Kubernetes Replica Set": {
                        "Kubernetes Replica Set Get": [], 
                        "Kubernetes Replica Set List": [], 
                        "Kubernetes Replica Set Watch": []
                    }, 
                    "Kubernetes Replica Set/scale": {
                        "Kubernetes Replica Set/scale Get": [], 
                        "Kubernetes Replica Set/scale List": [], 
                        "Kubernetes Replica Set/scale Watch": []
                    }, 
                    "Kubernetes Replica Set/status": {
                        "Kubernetes Replica Set/status Get": [], 
                        "Kubernetes Replica Set/status List": [], 
                        "Kubernetes Replica Set/status Watch": []
                    }, 
                    "Kubernetes Replication Controller": {
                        "Kubernetes Replication Controller Get": [], 
                        "Kubernetes Replication Controller List": [], 
                        "Kubernetes Replication Controller Watch": []
                    }, 
                    "Kubernetes Replication Controller/scale": {
                        "Kubernetes Replication Controller/scale Get": [], 
                        "Kubernetes Replication Controller/scale List": [], 
                        "Kubernetes Replication Controller/scale Watch": []
                    }, 
                    "Kubernetes Replication Controller/status": {
                        "Kubernetes Replication Controller/status Get": [], 
                        "Kubernetes Replication Controller/status List": [], 
                        "Kubernetes Replication Controller/status Watch": []
                    }, 
                    "Kubernetes Resource Quota": {
                        "Kubernetes Resource Quota Get": [], 
                        "Kubernetes Resource Quota List": [], 
                        "Kubernetes Resource Quota Watch": []
                    }, 
                    "Kubernetes Resource Quota/status": {
                        "Kubernetes Resource Quota/status Get": [], 
                        "Kubernetes Resource Quota/status List": [], 
                        "Kubernetes Resource Quota/status Watch": []
                    }, 
                    "Kubernetes Role": {
                        "Kubernetes Role Get": [], 
                        "Kubernetes Role List": [], 
                        "Kubernetes Role Watch": []
                    }, 
                    "Kubernetes Role Binding": {
                        "Kubernetes Role Binding Get": [], 
                        "Kubernetes Role Binding List": [], 
                        "Kubernetes Role Binding Watch": []
                    }, 
                    "Kubernetes Role Binding/status": {
                        "Kubernetes Role Binding/status Get": [], 
                        "Kubernetes Role Binding/status List": [], 
                        "Kubernetes Role Binding/status Watch": []
                    }, 
                    "Kubernetes Role/status": {
                        "Kubernetes Role/status Get": [], 
                        "Kubernetes Role/status List": [], 
                        "Kubernetes Role/status Watch": []
                    }, 
                    "Kubernetes Secret": {
                        "Kubernetes Secret Get": [], 
                        "Kubernetes Secret List": [], 
                        "Kubernetes Secret Watch": []
                    }, 
                    "Kubernetes Secret/status": {
                        "Kubernetes Secret/status Get": [], 
                        "Kubernetes Secret/status List": [], 
                        "Kubernetes Secret/status Watch": []
                    }, 
                    "Kubernetes Service": {
                        "Kubernetes Service Get": [], 
                        "Kubernetes Service List": [], 
                        "Kubernetes Service Watch": []
                    }, 
                    "Kubernetes Service Account": {
                        "Kubernetes Service Account Get": [], 
                        "Kubernetes Service Account List": [], 
                        "Kubernetes Service Account Watch": []
                    }, 
                    "Kubernetes Service Account/status": {
                        "Kubernetes Service Account/status Get": [], 
                        "Kubernetes Service Account/status List": [], 
                        "Kubernetes Service Account/status Watch": []
                    }, 
                    "Kubernetes Service Account/token": {
                        "Kubernetes Service Account/token Get": [], 
                        "Kubernetes Service Account/token List": [], 
                        "Kubernetes Service Account/token Watch": []
                    }, 
                    "Kubernetes Service/proxy": {
                        "Kubernetes Service/proxy Get": [], 
                        "Kubernetes Service/proxy List": [], 
                        "Kubernetes Service/proxy Watch": []
                    }, 
                    "Kubernetes Service/status": {
                        "Kubernetes Service/status Get": [], 
                        "Kubernetes Service/status List": [], 
                        "Kubernetes Service/status Watch": []
                    }, 
                    "Kubernetes Stack": {
                        "Kubernetes Stack Get": [], 
                        "Kubernetes Stack List": [], 
                        "Kubernetes Stack Watch": []
                    }, 
                    "Kubernetes Stack/status": {
                        "Kubernetes Stack/status Get": [], 
                        "Kubernetes Stack/status List": [], 
                        "Kubernetes Stack/status Watch": []
                    }, 
                    "Kubernetes Stateful Set": {
                        "Kubernetes Stateful Set Get": [], 
                        "Kubernetes Stateful Set List": [], 
                        "Kubernetes Stateful Set Watch": []
                    }, 
                    "Kubernetes Stateful Set/scale": {
                        "Kubernetes Stateful Set/scale Get": [], 
                        "Kubernetes Stateful Set/scale List": [], 
                        "Kubernetes Stateful Set/scale Watch": []
                    }, 
                    "Kubernetes Stateful Set/status": {
                        "Kubernetes Stateful Set/status Get": [], 
                        "Kubernetes Stateful Set/status List": [], 
                        "Kubernetes Stateful Set/status Watch": []
                    }, 
                    "Kubernetes Storage Class": {
                        "Kubernetes Storage Class Get": [], 
                        "Kubernetes Storage Class List": [], 
                        "Kubernetes Storage Class Watch": []
                    }, 
                    "Kubernetes Storage Class/status": {
                        "Kubernetes Storage Class/status Get": [], 
                        "Kubernetes Storage Class/status List": [], 
                        "Kubernetes Storage Class/status Watch": []
                    }, 
                    "Kubernetes Third Party Resource": {
                        "Kubernetes Third Party Resource Get": [], 
                        "Kubernetes Third Party Resource List": [], 
                        "Kubernetes Third Party Resource Watch": []
                    }, 
                    "Kubernetes Third Party Resource/status": {
                        "Kubernetes Third Party Resource/status Get": [], 
                        "Kubernetes Third Party Resource/status List": [], 
                        "Kubernetes Third Party Resource/status Watch": []
                    }, 
                    "Kubernetes User": {
                        "Kubernetes User Get": [], 
                        "Kubernetes User List": [], 
                        "Kubernetes User Watch": []
                    }, 
                    "Kubernetes User/status": {
                        "Kubernetes User/status Get": [], 
                        "Kubernetes User/status List": [], 
                        "Kubernetes User/status Watch": []
                    }, 
                    "Network": {
                        "Network View": []
                    }, 
                    "Node": {
                        "Node View": []
                    }, 
                    "Secret": {
                        "Secret View": []
                    }, 
                    "Service": {
                        "Service Logs": [], 
                        "Service View": [], 
                        "Service View Tasks": []
                    }, 
                    "Volume": {
                        "Volume View": []
                    }
                }, 
                "system_role": true
            }, 
            {
                "id": "restrictedcontrol", 
                "name": "Restricted Control", 
                "operations": {
                    "Config": {
                        "Config Create": [], 
                        "Config Delete": [], 
                        "Config Update": [], 
                        "Config Use": [], 
                        "Config View": []
                    }, 
                    "Container": {
                        "Container Attach": [], 
                        "Container Changes": [], 
                        "Container Connect": [], 
                        "Container Create": [], 
                        "Container Disconnect": [], 
                        "Container Export": [], 
                        "Container Kill": [], 
                        "Container Logs": [], 
                        "Container Pause": [], 
                        "Container Remove": [], 
                        "Container Rename": [], 
                        "Container Resize": [], 
                        "Container Restart": [], 
                        "Container Start": [], 
                        "Container Stats": [], 
                        "Container Stop": [], 
                        "Container Top": [], 
                        "Container Unpause": [], 
                        "Container View": [], 
                        "Container Wait": []
                    }, 
                    "Image": {
                        "Image Build": [], 
                        "Image Commit": [], 
                        "Image Create": [], 
                        "Image Export": [], 
                        "Image History": [], 
                        "Image Load": [], 
                        "Image Prune": [], 
                        "Image Push": [], 
                        "Image Remove": [
                            "Force Remove"
                        ], 
                        "Image Search": [], 
                        "Image Tag": [], 
                        "Image View": []
                    }, 
                    "Kubernetes Certificate Signing Request": {
                        "Kubernetes Certificate Signing Request Create": [], 
                        "Kubernetes Certificate Signing Request Delete": [], 
                        "Kubernetes Certificate Signing Request Delete Multiple": [], 
                        "Kubernetes Certificate Signing Request Get": [], 
                        "Kubernetes Certificate Signing Request List": [], 
                        "Kubernetes Certificate Signing Request Patch": [], 
                        "Kubernetes Certificate Signing Request Update": [], 
                        "Kubernetes Certificate Signing Request Watch": []
                    }, 
                    "Kubernetes Certificate Signing Request/approval": {
                        "Kubernetes Certificate Signing Request/approval Create": [], 
                        "Kubernetes Certificate Signing Request/approval Delete": [], 
                        "Kubernetes Certificate Signing Request/approval Delete Multiple": [], 
                        "Kubernetes Certificate Signing Request/approval Get": [], 
                        "Kubernetes Certificate Signing Request/approval List": [], 
                        "Kubernetes Certificate Signing Request/approval Patch": [], 
                        "Kubernetes Certificate Signing Request/approval Update": [], 
                        "Kubernetes Certificate Signing Request/approval Watch": []
                    }, 
                    "Kubernetes Certificate Signing Request/status": {
                        "Kubernetes Certificate Signing Request/status Create": [], 
                        "Kubernetes Certificate Signing Request/status Delete": [], 
                        "Kubernetes Certificate Signing Request/status Delete Multiple": [], 
                        "Kubernetes Certificate Signing Request/status Get": [], 
                        "Kubernetes Certificate Signing Request/status List": [], 
                        "Kubernetes Certificate Signing Request/status Patch": [], 
                        "Kubernetes Certificate Signing Request/status Update": [], 
                        "Kubernetes Certificate Signing Request/status Watch": []
                    }, 
                    "Kubernetes Cluster Role": {
                        "Kubernetes Cluster Role Create": [], 
                        "Kubernetes Cluster Role Delete": [], 
                        "Kubernetes Cluster Role Delete Multiple": [], 
                        "Kubernetes Cluster Role Get": [], 
                        "Kubernetes Cluster Role List": [], 
                        "Kubernetes Cluster Role Patch": [], 
                        "Kubernetes Cluster Role Update": [], 
                        "Kubernetes Cluster Role Watch": []
                    }, 
                    "Kubernetes Cluster Role Binding": {
                        "Kubernetes Cluster Role Binding Create": [], 
                        "Kubernetes Cluster Role Binding Delete": [], 
                        "Kubernetes Cluster Role Binding Delete Multiple": [], 
                        "Kubernetes Cluster Role Binding Get": [], 
                        "Kubernetes Cluster Role Binding List": [], 
                        "Kubernetes Cluster Role Binding Patch": [], 
                        "Kubernetes Cluster Role Binding Update": [], 
                        "Kubernetes Cluster Role Binding Watch": []
                    }, 
                    "Kubernetes Cluster Role Binding/status": {
                        "Kubernetes Cluster Role Binding/status Create": [], 
                        "Kubernetes Cluster Role Binding/status Delete": [], 
                        "Kubernetes Cluster Role Binding/status Delete Multiple": [], 
                        "Kubernetes Cluster Role Binding/status Get": [], 
                        "Kubernetes Cluster Role Binding/status List": [], 
                        "Kubernetes Cluster Role Binding/status Patch": [], 
                        "Kubernetes Cluster Role Binding/status Update": [], 
                        "Kubernetes Cluster Role Binding/status Watch": []
                    }, 
                    "Kubernetes Cluster Role/status": {
                        "Kubernetes Cluster Role/status Create": [], 
                        "Kubernetes Cluster Role/status Delete": [], 
                        "Kubernetes Cluster Role/status Delete Multiple": [], 
                        "Kubernetes Cluster Role/status Get": [], 
                        "Kubernetes Cluster Role/status List": [], 
                        "Kubernetes Cluster Role/status Patch": [], 
                        "Kubernetes Cluster Role/status Update": [], 
                        "Kubernetes Cluster Role/status Watch": []
                    }, 
                    "Kubernetes Component Status": {
                        "Kubernetes Component Status Create": [], 
                        "Kubernetes Component Status Delete": [], 
                        "Kubernetes Component Status Delete Multiple": [], 
                        "Kubernetes Component Status Get": [], 
                        "Kubernetes Component Status List": [], 
                        "Kubernetes Component Status Patch": [], 
                        "Kubernetes Component Status Update": [], 
                        "Kubernetes Component Status Watch": []
                    }, 
                    "Kubernetes Component Status/status": {
                        "Kubernetes Component Status/status Create": [], 
                        "Kubernetes Component Status/status Delete": [], 
                        "Kubernetes Component Status/status Delete Multiple": [], 
                        "Kubernetes Component Status/status Get": [], 
                        "Kubernetes Component Status/status List": [], 
                        "Kubernetes Component Status/status Patch": [], 
                        "Kubernetes Component Status/status Update": [], 
                        "Kubernetes Component Status/status Watch": []
                    }, 
                    "Kubernetes Config Map": {
                        "Kubernetes Config Map Create": [], 
                        "Kubernetes Config Map Delete": [], 
                        "Kubernetes Config Map Delete Multiple": [], 
                        "Kubernetes Config Map Get": [], 
                        "Kubernetes Config Map List": [], 
                        "Kubernetes Config Map Patch": [], 
                        "Kubernetes Config Map Update": [], 
                        "Kubernetes Config Map Watch": []
                    }, 
                    "Kubernetes Config Map/status": {
                        "Kubernetes Config Map/status Create": [], 
                        "Kubernetes Config Map/status Delete": [], 
                        "Kubernetes Config Map/status Delete Multiple": [], 
                        "Kubernetes Config Map/status Get": [], 
                        "Kubernetes Config Map/status List": [], 
                        "Kubernetes Config Map/status Patch": [], 
                        "Kubernetes Config Map/status Update": [], 
                        "Kubernetes Config Map/status Watch": []
                    }, 
                    "Kubernetes Controller Revision": {
                        "Kubernetes Controller Revision Create": [], 
                        "Kubernetes Controller Revision Delete": [], 
                        "Kubernetes Controller Revision Delete Multiple": [], 
                        "Kubernetes Controller Revision Get": [], 
                        "Kubernetes Controller Revision List": [], 
                        "Kubernetes Controller Revision Patch": [], 
                        "Kubernetes Controller Revision Update": [], 
                        "Kubernetes Controller Revision Watch": []
                    }, 
                    "Kubernetes Controller Revision/status": {
                        "Kubernetes Controller Revision/status Create": [], 
                        "Kubernetes Controller Revision/status Delete": [], 
                        "Kubernetes Controller Revision/status Delete Multiple": [], 
                        "Kubernetes Controller Revision/status Get": [], 
                        "Kubernetes Controller Revision/status List": [], 
                        "Kubernetes Controller Revision/status Patch": [], 
                        "Kubernetes Controller Revision/status Update": [], 
                        "Kubernetes Controller Revision/status Watch": []
                    }, 
                    "Kubernetes Cron Job": {
                        "Kubernetes Cron Job Create": [], 
                        "Kubernetes Cron Job Delete": [], 
                        "Kubernetes Cron Job Delete Multiple": [], 
                        "Kubernetes Cron Job Get": [], 
                        "Kubernetes Cron Job List": [], 
                        "Kubernetes Cron Job Patch": [], 
                        "Kubernetes Cron Job Update": [], 
                        "Kubernetes Cron Job Watch": []
                    }, 
                    "Kubernetes Cron Job/status": {
                        "Kubernetes Cron Job/status Create": [], 
                        "Kubernetes Cron Job/status Delete": [], 
                        "Kubernetes Cron Job/status Delete Multiple": [], 
                        "Kubernetes Cron Job/status Get": [], 
                        "Kubernetes Cron Job/status List": [], 
                        "Kubernetes Cron Job/status Patch": [], 
                        "Kubernetes Cron Job/status Update": [], 
                        "Kubernetes Cron Job/status Watch": []
                    }, 
                    "Kubernetes Custom Resource Definition": {
                        "Kubernetes Custom Resource Definition Create": [], 
                        "Kubernetes Custom Resource Definition Delete": [], 
                        "Kubernetes Custom Resource Definition Delete Multiple": [], 
                        "Kubernetes Custom Resource Definition Get": [], 
                        "Kubernetes Custom Resource Definition List": [], 
                        "Kubernetes Custom Resource Definition Patch": [], 
                        "Kubernetes Custom Resource Definition Update": [], 
                        "Kubernetes Custom Resource Definition Watch": []
                    }, 
                    "Kubernetes Custom Resource Definition/status": {
                        "Kubernetes Custom Resource Definition/status Create": [], 
                        "Kubernetes Custom Resource Definition/status Delete": [], 
                        "Kubernetes Custom Resource Definition/status Delete Multiple": [], 
                        "Kubernetes Custom Resource Definition/status Get": [], 
                        "Kubernetes Custom Resource Definition/status List": [], 
                        "Kubernetes Custom Resource Definition/status Patch": [], 
                        "Kubernetes Custom Resource Definition/status Update": [], 
                        "Kubernetes Custom Resource Definition/status Watch": []
                    }, 
                    "Kubernetes Daemonset": {
                        "Kubernetes Daemonset Create": [], 
                        "Kubernetes Daemonset Delete": [], 
                        "Kubernetes Daemonset Delete Multiple": [], 
                        "Kubernetes Daemonset Get": [], 
                        "Kubernetes Daemonset List": [], 
                        "Kubernetes Daemonset Patch": [], 
                        "Kubernetes Daemonset Update": [], 
                        "Kubernetes Daemonset Watch": []
                    }, 
                    "Kubernetes Daemonset/status": {
                        "Kubernetes Daemonset/status Create": [], 
                        "Kubernetes Daemonset/status Delete": [], 
                        "Kubernetes Daemonset/status Delete Multiple": [], 
                        "Kubernetes Daemonset/status Get": [], 
                        "Kubernetes Daemonset/status List": [], 
                        "Kubernetes Daemonset/status Patch": [], 
                        "Kubernetes Daemonset/status Update": [], 
                        "Kubernetes Daemonset/status Watch": []
                    }, 
                    "Kubernetes Deployment": {
                        "Kubernetes Deployment Create": [], 
                        "Kubernetes Deployment Delete": [], 
                        "Kubernetes Deployment Delete Multiple": [], 
                        "Kubernetes Deployment Get": [], 
                        "Kubernetes Deployment List": [], 
                        "Kubernetes Deployment Patch": [], 
                        "Kubernetes Deployment Update": [], 
                        "Kubernetes Deployment Watch": []
                    }, 
                    "Kubernetes Deployment/rollback": {
                        "Kubernetes Deployment/rollback Create": [], 
                        "Kubernetes Deployment/rollback Delete": [], 
                        "Kubernetes Deployment/rollback Delete Multiple": [], 
                        "Kubernetes Deployment/rollback Get": [], 
                        "Kubernetes Deployment/rollback List": [], 
                        "Kubernetes Deployment/rollback Patch": [], 
                        "Kubernetes Deployment/rollback Update": [], 
                        "Kubernetes Deployment/rollback Watch": []
                    }, 
                    "Kubernetes Deployment/scale": {
                        "Kubernetes Deployment/scale Create": [], 
                        "Kubernetes Deployment/scale Delete": [], 
                        "Kubernetes Deployment/scale Delete Multiple": [], 
                        "Kubernetes Deployment/scale Get": [], 
                        "Kubernetes Deployment/scale List": [], 
                        "Kubernetes Deployment/scale Patch": [], 
                        "Kubernetes Deployment/scale Update": [], 
                        "Kubernetes Deployment/scale Watch": []
                    }, 
                    "Kubernetes Deployment/status": {
                        "Kubernetes Deployment/status Create": [], 
                        "Kubernetes Deployment/status Delete": [], 
                        "Kubernetes Deployment/status Delete Multiple": [], 
                        "Kubernetes Deployment/status Get": [], 
                        "Kubernetes Deployment/status List": [], 
                        "Kubernetes Deployment/status Patch": [], 
                        "Kubernetes Deployment/status Update": [], 
                        "Kubernetes Deployment/status Watch": []
                    }, 
                    "Kubernetes Endpoint": {
                        "Kubernetes Endpoint Create": [], 
                        "Kubernetes Endpoint Delete": [], 
                        "Kubernetes Endpoint Delete Multiple": [], 
                        "Kubernetes Endpoint Get": [], 
                        "Kubernetes Endpoint List": [], 
                        "Kubernetes Endpoint Patch": [], 
                        "Kubernetes Endpoint Update": [], 
                        "Kubernetes Endpoint Watch": []
                    }, 
                    "Kubernetes Endpoint/status": {
                        "Kubernetes Endpoint/status Create": [], 
                        "Kubernetes Endpoint/status Delete": [], 
                        "Kubernetes Endpoint/status Delete Multiple": [], 
                        "Kubernetes Endpoint/status Get": [], 
                        "Kubernetes Endpoint/status List": [], 
                        "Kubernetes Endpoint/status Patch": [], 
                        "Kubernetes Endpoint/status Update": [], 
                        "Kubernetes Endpoint/status Watch": []
                    }, 
                    "Kubernetes Event": {
                        "Kubernetes Event Create": [], 
                        "Kubernetes Event Delete": [], 
                        "Kubernetes Event Delete Multiple": [], 
                        "Kubernetes Event Get": [], 
                        "Kubernetes Event List": [], 
                        "Kubernetes Event Patch": [], 
                        "Kubernetes Event Update": [], 
                        "Kubernetes Event Watch": []
                    }, 
                    "Kubernetes Event/status": {
                        "Kubernetes Event/status Create": [], 
                        "Kubernetes Event/status Delete": [], 
                        "Kubernetes Event/status Delete Multiple": [], 
                        "Kubernetes Event/status Get": [], 
                        "Kubernetes Event/status List": [], 
                        "Kubernetes Event/status Patch": [], 
                        "Kubernetes Event/status Update": [], 
                        "Kubernetes Event/status Watch": []
                    }, 
                    "Kubernetes External Admission Hook Configuration": {
                        "Kubernetes External Admission Hook Configuration Create": [], 
                        "Kubernetes External Admission Hook Configuration Delete": [], 
                        "Kubernetes External Admission Hook Configuration Delete Multiple": [], 
                        "Kubernetes External Admission Hook Configuration Get": [], 
                        "Kubernetes External Admission Hook Configuration List": [], 
                        "Kubernetes External Admission Hook Configuration Patch": [], 
                        "Kubernetes External Admission Hook Configuration Update": [], 
                        "Kubernetes External Admission Hook Configuration Watch": []
                    }, 
                    "Kubernetes External Admission Hook Configuration/status": {
                        "Kubernetes External Admission Hook Configuration/status Create": [], 
                        "Kubernetes External Admission Hook Configuration/status Delete": [], 
                        "Kubernetes External Admission Hook Configuration/status Delete Multiple": [], 
                        "Kubernetes External Admission Hook Configuration/status Get": [], 
                        "Kubernetes External Admission Hook Configuration/status List": [], 
                        "Kubernetes External Admission Hook Configuration/status Patch": [], 
                        "Kubernetes External Admission Hook Configuration/status Update": [], 
                        "Kubernetes External Admission Hook Configuration/status Watch": []
                    }, 
                    "Kubernetes Horizontal Pod Autoscaler": {
                        "Kubernetes Horizontal Pod Autoscaler Create": [], 
                        "Kubernetes Horizontal Pod Autoscaler Delete": [], 
                        "Kubernetes Horizontal Pod Autoscaler Delete Multiple": [], 
                        "Kubernetes Horizontal Pod Autoscaler Get": [], 
                        "Kubernetes Horizontal Pod Autoscaler List": [], 
                        "Kubernetes Horizontal Pod Autoscaler Patch": [], 
                        "Kubernetes Horizontal Pod Autoscaler Update": [], 
                        "Kubernetes Horizontal Pod Autoscaler Watch": []
                    }, 
                    "Kubernetes Horizontal Pod Autoscaler/status": {
                        "Kubernetes Horizontal Pod Autoscaler/status Create": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Delete": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Delete Multiple": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Get": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status List": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Patch": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Update": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Watch": []
                    }, 
                    "Kubernetes Ingress": {
                        "Kubernetes Ingress Create": [], 
                        "Kubernetes Ingress Delete": [], 
                        "Kubernetes Ingress Delete Multiple": [], 
                        "Kubernetes Ingress Get": [], 
                        "Kubernetes Ingress List": [], 
                        "Kubernetes Ingress Patch": [], 
                        "Kubernetes Ingress Update": [], 
                        "Kubernetes Ingress Watch": []
                    }, 
                    "Kubernetes Ingress/status": {
                        "Kubernetes Ingress/status Create": [], 
                        "Kubernetes Ingress/status Delete": [], 
                        "Kubernetes Ingress/status Delete Multiple": [], 
                        "Kubernetes Ingress/status Get": [], 
                        "Kubernetes Ingress/status List": [], 
                        "Kubernetes Ingress/status Patch": [], 
                        "Kubernetes Ingress/status Update": [], 
                        "Kubernetes Ingress/status Watch": []
                    }, 
                    "Kubernetes Initializer Configuration": {
                        "Kubernetes Initializer Configuration Create": [], 
                        "Kubernetes Initializer Configuration Delete": [], 
                        "Kubernetes Initializer Configuration Delete Multiple": [], 
                        "Kubernetes Initializer Configuration Get": [], 
                        "Kubernetes Initializer Configuration List": [], 
                        "Kubernetes Initializer Configuration Patch": [], 
                        "Kubernetes Initializer Configuration Update": [], 
                        "Kubernetes Initializer Configuration Watch": []
                    }, 
                    "Kubernetes Initializer Configuration/status": {
                        "Kubernetes Initializer Configuration/status Create": [], 
                        "Kubernetes Initializer Configuration/status Delete": [], 
                        "Kubernetes Initializer Configuration/status Delete Multiple": [], 
                        "Kubernetes Initializer Configuration/status Get": [], 
                        "Kubernetes Initializer Configuration/status List": [], 
                        "Kubernetes Initializer Configuration/status Patch": [], 
                        "Kubernetes Initializer Configuration/status Update": [], 
                        "Kubernetes Initializer Configuration/status Watch": []
                    }, 
                    "Kubernetes Job": {
                        "Kubernetes Job Create": [], 
                        "Kubernetes Job Delete": [], 
                        "Kubernetes Job Delete Multiple": [], 
                        "Kubernetes Job Get": [], 
                        "Kubernetes Job List": [], 
                        "Kubernetes Job Patch": [], 
                        "Kubernetes Job Update": [], 
                        "Kubernetes Job Watch": []
                    }, 
                    "Kubernetes Job/status": {
                        "Kubernetes Job/status Create": [], 
                        "Kubernetes Job/status Delete": [], 
                        "Kubernetes Job/status Delete Multiple": [], 
                        "Kubernetes Job/status Get": [], 
                        "Kubernetes Job/status List": [], 
                        "Kubernetes Job/status Patch": [], 
                        "Kubernetes Job/status Update": [], 
                        "Kubernetes Job/status Watch": []
                    }, 
                    "Kubernetes Limit Range": {
                        "Kubernetes Limit Range Create": [], 
                        "Kubernetes Limit Range Delete": [], 
                        "Kubernetes Limit Range Delete Multiple": [], 
                        "Kubernetes Limit Range Get": [], 
                        "Kubernetes Limit Range List": [], 
                        "Kubernetes Limit Range Patch": [], 
                        "Kubernetes Limit Range Update": [], 
                        "Kubernetes Limit Range Watch": []
                    }, 
                    "Kubernetes Limit Range/status": {
                        "Kubernetes Limit Range/status Create": [], 
                        "Kubernetes Limit Range/status Delete": [], 
                        "Kubernetes Limit Range/status Delete Multiple": [], 
                        "Kubernetes Limit Range/status Get": [], 
                        "Kubernetes Limit Range/status List": [], 
                        "Kubernetes Limit Range/status Patch": [], 
                        "Kubernetes Limit Range/status Update": [], 
                        "Kubernetes Limit Range/status Watch": []
                    }, 
                    "Kubernetes Namespace": {
                        "Kubernetes Namespace Get": [], 
                        "Kubernetes Namespace List": [], 
                        "Kubernetes Namespace Watch": []
                    }, 
                    "Kubernetes Namespace/expansion": {
                        "Kubernetes Namespace/expansion Create": [], 
                        "Kubernetes Namespace/expansion Delete": [], 
                        "Kubernetes Namespace/expansion Delete Multiple": [], 
                        "Kubernetes Namespace/expansion Get": [], 
                        "Kubernetes Namespace/expansion List": [], 
                        "Kubernetes Namespace/expansion Patch": [], 
                        "Kubernetes Namespace/expansion Update": [], 
                        "Kubernetes Namespace/expansion Watch": []
                    }, 
                    "Kubernetes Namespace/status": {
                        "Kubernetes Namespace/status Create": [], 
                        "Kubernetes Namespace/status Delete": [], 
                        "Kubernetes Namespace/status Delete Multiple": [], 
                        "Kubernetes Namespace/status Get": [], 
                        "Kubernetes Namespace/status List": [], 
                        "Kubernetes Namespace/status Patch": [], 
                        "Kubernetes Namespace/status Update": [], 
                        "Kubernetes Namespace/status Watch": []
                    }, 
                    "Kubernetes Network Policy": {
                        "Kubernetes Network Policy Create": [], 
                        "Kubernetes Network Policy Delete": [], 
                        "Kubernetes Network Policy Delete Multiple": [], 
                        "Kubernetes Network Policy Get": [], 
                        "Kubernetes Network Policy List": [], 
                        "Kubernetes Network Policy Patch": [], 
                        "Kubernetes Network Policy Update": [], 
                        "Kubernetes Network Policy Watch": []
                    }, 
                    "Kubernetes Network Policy/status": {
                        "Kubernetes Network Policy/status Create": [], 
                        "Kubernetes Network Policy/status Delete": [], 
                        "Kubernetes Network Policy/status Delete Multiple": [], 
                        "Kubernetes Network Policy/status Get": [], 
                        "Kubernetes Network Policy/status List": [], 
                        "Kubernetes Network Policy/status Patch": [], 
                        "Kubernetes Network Policy/status Update": [], 
                        "Kubernetes Network Policy/status Watch": []
                    }, 
                    "Kubernetes Node": {
                        "Kubernetes Node Get": [], 
                        "Kubernetes Node List": [], 
                        "Kubernetes Node Watch": []
                    }, 
                    "Kubernetes Node/log": {
                        "Kubernetes Node/log Create": [], 
                        "Kubernetes Node/log Delete": [], 
                        "Kubernetes Node/log Delete Multiple": [], 
                        "Kubernetes Node/log Get": [], 
                        "Kubernetes Node/log List": [], 
                        "Kubernetes Node/log Patch": [], 
                        "Kubernetes Node/log Update": [], 
                        "Kubernetes Node/log Watch": []
                    }, 
                    "Kubernetes Node/metrics": {
                        "Kubernetes Node/metrics Create": [], 
                        "Kubernetes Node/metrics Delete": [], 
                        "Kubernetes Node/metrics Delete Multiple": [], 
                        "Kubernetes Node/metrics Get": [], 
                        "Kubernetes Node/metrics List": [], 
                        "Kubernetes Node/metrics Patch": [], 
                        "Kubernetes Node/metrics Update": [], 
                        "Kubernetes Node/metrics Watch": []
                    }, 
                    "Kubernetes Node/proxy": {
                        "Kubernetes Node/proxy Create": [], 
                        "Kubernetes Node/proxy Delete": [], 
                        "Kubernetes Node/proxy Delete Multiple": [], 
                        "Kubernetes Node/proxy Get": [], 
                        "Kubernetes Node/proxy List": [], 
                        "Kubernetes Node/proxy Patch": [], 
                        "Kubernetes Node/proxy Update": [], 
                        "Kubernetes Node/proxy Watch": []
                    }, 
                    "Kubernetes Node/spec": {
                        "Kubernetes Node/spec Create": [], 
                        "Kubernetes Node/spec Delete": [], 
                        "Kubernetes Node/spec Delete Multiple": [], 
                        "Kubernetes Node/spec Get": [], 
                        "Kubernetes Node/spec List": [], 
                        "Kubernetes Node/spec Patch": [], 
                        "Kubernetes Node/spec Update": [], 
                        "Kubernetes Node/spec Watch": []
                    }, 
                    "Kubernetes Node/stats": {
                        "Kubernetes Node/stats Create": [], 
                        "Kubernetes Node/stats Delete": [], 
                        "Kubernetes Node/stats Delete Multiple": [], 
                        "Kubernetes Node/stats Get": [], 
                        "Kubernetes Node/stats List": [], 
                        "Kubernetes Node/stats Patch": [], 
                        "Kubernetes Node/stats Update": [], 
                        "Kubernetes Node/stats Watch": []
                    }, 
                    "Kubernetes Node/status": {
                        "Kubernetes Node/status Create": [], 
                        "Kubernetes Node/status Delete": [], 
                        "Kubernetes Node/status Delete Multiple": [], 
                        "Kubernetes Node/status Get": [], 
                        "Kubernetes Node/status List": [], 
                        "Kubernetes Node/status Patch": [], 
                        "Kubernetes Node/status Update": [], 
                        "Kubernetes Node/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume": {
                        "Kubernetes Persistent Volume Create": [], 
                        "Kubernetes Persistent Volume Delete": [], 
                        "Kubernetes Persistent Volume Delete Multiple": [], 
                        "Kubernetes Persistent Volume Get": [], 
                        "Kubernetes Persistent Volume List": [], 
                        "Kubernetes Persistent Volume Patch": [], 
                        "Kubernetes Persistent Volume Update": [], 
                        "Kubernetes Persistent Volume Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim": {
                        "Kubernetes Persistent Volume Claim Create": [], 
                        "Kubernetes Persistent Volume Claim Delete": [], 
                        "Kubernetes Persistent Volume Claim Delete Multiple": [], 
                        "Kubernetes Persistent Volume Claim Get": [], 
                        "Kubernetes Persistent Volume Claim List": [], 
                        "Kubernetes Persistent Volume Claim Patch": [], 
                        "Kubernetes Persistent Volume Claim Update": [], 
                        "Kubernetes Persistent Volume Claim Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim/status": {
                        "Kubernetes Persistent Volume Claim/status Create": [], 
                        "Kubernetes Persistent Volume Claim/status Delete": [], 
                        "Kubernetes Persistent Volume Claim/status Delete Multiple": [], 
                        "Kubernetes Persistent Volume Claim/status Get": [], 
                        "Kubernetes Persistent Volume Claim/status List": [], 
                        "Kubernetes Persistent Volume Claim/status Patch": [], 
                        "Kubernetes Persistent Volume Claim/status Update": [], 
                        "Kubernetes Persistent Volume Claim/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume/status": {
                        "Kubernetes Persistent Volume/status Create": [], 
                        "Kubernetes Persistent Volume/status Delete": [], 
                        "Kubernetes Persistent Volume/status Delete Multiple": [], 
                        "Kubernetes Persistent Volume/status Get": [], 
                        "Kubernetes Persistent Volume/status List": [], 
                        "Kubernetes Persistent Volume/status Patch": [], 
                        "Kubernetes Persistent Volume/status Update": [], 
                        "Kubernetes Persistent Volume/status Watch": []
                    }, 
                    "Kubernetes Pod": {
                        "Kubernetes Pod Create": [], 
                        "Kubernetes Pod Delete": [], 
                        "Kubernetes Pod Delete Multiple": [], 
                        "Kubernetes Pod Get": [], 
                        "Kubernetes Pod List": [], 
                        "Kubernetes Pod Patch": [], 
                        "Kubernetes Pod Update": [], 
                        "Kubernetes Pod Watch": []
                    }, 
                    "Kubernetes Pod Disruption Budget": {
                        "Kubernetes Pod Disruption Budget Create": [], 
                        "Kubernetes Pod Disruption Budget Delete": [], 
                        "Kubernetes Pod Disruption Budget Delete Multiple": [], 
                        "Kubernetes Pod Disruption Budget Get": [], 
                        "Kubernetes Pod Disruption Budget List": [], 
                        "Kubernetes Pod Disruption Budget Patch": [], 
                        "Kubernetes Pod Disruption Budget Update": [], 
                        "Kubernetes Pod Disruption Budget Watch": []
                    }, 
                    "Kubernetes Pod Disruption Budget/status": {
                        "Kubernetes Pod Disruption Budget/status Create": [], 
                        "Kubernetes Pod Disruption Budget/status Delete": [], 
                        "Kubernetes Pod Disruption Budget/status Delete Multiple": [], 
                        "Kubernetes Pod Disruption Budget/status Get": [], 
                        "Kubernetes Pod Disruption Budget/status List": [], 
                        "Kubernetes Pod Disruption Budget/status Patch": [], 
                        "Kubernetes Pod Disruption Budget/status Update": [], 
                        "Kubernetes Pod Disruption Budget/status Watch": []
                    }, 
                    "Kubernetes Pod Preset": {
                        "Kubernetes Pod Preset Create": [], 
                        "Kubernetes Pod Preset Delete": [], 
                        "Kubernetes Pod Preset Delete Multiple": [], 
                        "Kubernetes Pod Preset Get": [], 
                        "Kubernetes Pod Preset List": [], 
                        "Kubernetes Pod Preset Patch": [], 
                        "Kubernetes Pod Preset Update": [], 
                        "Kubernetes Pod Preset Watch": []
                    }, 
                    "Kubernetes Pod Preset/status": {
                        "Kubernetes Pod Preset/status Create": [], 
                        "Kubernetes Pod Preset/status Delete": [], 
                        "Kubernetes Pod Preset/status Delete Multiple": [], 
                        "Kubernetes Pod Preset/status Get": [], 
                        "Kubernetes Pod Preset/status List": [], 
                        "Kubernetes Pod Preset/status Patch": [], 
                        "Kubernetes Pod Preset/status Update": [], 
                        "Kubernetes Pod Preset/status Watch": []
                    }, 
                    "Kubernetes Pod Security Policy/status": {
                        "Kubernetes Pod Security Policy/status Create": [], 
                        "Kubernetes Pod Security Policy/status Delete": [], 
                        "Kubernetes Pod Security Policy/status Delete Multiple": [], 
                        "Kubernetes Pod Security Policy/status Get": [], 
                        "Kubernetes Pod Security Policy/status List": [], 
                        "Kubernetes Pod Security Policy/status Patch": [], 
                        "Kubernetes Pod Security Policy/status Update": [], 
                        "Kubernetes Pod Security Policy/status Watch": []
                    }, 
                    "Kubernetes Pod Template": {
                        "Kubernetes Pod Template Create": [], 
                        "Kubernetes Pod Template Delete": [], 
                        "Kubernetes Pod Template Delete Multiple": [], 
                        "Kubernetes Pod Template Get": [], 
                        "Kubernetes Pod Template List": [], 
                        "Kubernetes Pod Template Patch": [], 
                        "Kubernetes Pod Template Update": [], 
                        "Kubernetes Pod Template Watch": []
                    }, 
                    "Kubernetes Pod Template/status": {
                        "Kubernetes Pod Template/status Create": [], 
                        "Kubernetes Pod Template/status Delete": [], 
                        "Kubernetes Pod Template/status Delete Multiple": [], 
                        "Kubernetes Pod Template/status Get": [], 
                        "Kubernetes Pod Template/status List": [], 
                        "Kubernetes Pod Template/status Patch": [], 
                        "Kubernetes Pod Template/status Update": [], 
                        "Kubernetes Pod Template/status Watch": []
                    }, 
                    "Kubernetes Pod/attach": {
                        "Kubernetes Pod/attach Create": [], 
                        "Kubernetes Pod/attach Delete": [], 
                        "Kubernetes Pod/attach Delete Multiple": [], 
                        "Kubernetes Pod/attach Get": [], 
                        "Kubernetes Pod/attach List": [], 
                        "Kubernetes Pod/attach Patch": [], 
                        "Kubernetes Pod/attach Update": [], 
                        "Kubernetes Pod/attach Watch": []
                    }, 
                    "Kubernetes Pod/binding": {
                        "Kubernetes Pod/binding Create": [], 
                        "Kubernetes Pod/binding Delete": [], 
                        "Kubernetes Pod/binding Delete Multiple": [], 
                        "Kubernetes Pod/binding Get": [], 
                        "Kubernetes Pod/binding List": [], 
                        "Kubernetes Pod/binding Patch": [], 
                        "Kubernetes Pod/binding Update": [], 
                        "Kubernetes Pod/binding Watch": []
                    }, 
                    "Kubernetes Pod/eviction": {
                        "Kubernetes Pod/eviction Create": [], 
                        "Kubernetes Pod/eviction Delete": [], 
                        "Kubernetes Pod/eviction Delete Multiple": [], 
                        "Kubernetes Pod/eviction Get": [], 
                        "Kubernetes Pod/eviction List": [], 
                        "Kubernetes Pod/eviction Patch": [], 
                        "Kubernetes Pod/eviction Update": [], 
                        "Kubernetes Pod/eviction Watch": []
                    }, 
                    "Kubernetes Pod/exec": {
                        "Kubernetes Pod/exec Create": [], 
                        "Kubernetes Pod/exec Delete": [], 
                        "Kubernetes Pod/exec Delete Multiple": [], 
                        "Kubernetes Pod/exec Get": [], 
                        "Kubernetes Pod/exec List": [], 
                        "Kubernetes Pod/exec Patch": [], 
                        "Kubernetes Pod/exec Update": [], 
                        "Kubernetes Pod/exec Watch": []
                    }, 
                    "Kubernetes Pod/log": {
                        "Kubernetes Pod/log Create": [], 
                        "Kubernetes Pod/log Delete": [], 
                        "Kubernetes Pod/log Delete Multiple": [], 
                        "Kubernetes Pod/log Get": [], 
                        "Kubernetes Pod/log List": [], 
                        "Kubernetes Pod/log Patch": [], 
                        "Kubernetes Pod/log Update": [], 
                        "Kubernetes Pod/log Watch": []
                    }, 
                    "Kubernetes Pod/portforward": {
                        "Kubernetes Pod/portforward Create": [], 
                        "Kubernetes Pod/portforward Delete": [], 
                        "Kubernetes Pod/portforward Delete Multiple": [], 
                        "Kubernetes Pod/portforward Get": [], 
                        "Kubernetes Pod/portforward List": [], 
                        "Kubernetes Pod/portforward Patch": [], 
                        "Kubernetes Pod/portforward Update": [], 
                        "Kubernetes Pod/portforward Watch": []
                    }, 
                    "Kubernetes Pod/proxy": {
                        "Kubernetes Pod/proxy Create": [], 
                        "Kubernetes Pod/proxy Delete": [], 
                        "Kubernetes Pod/proxy Delete Multiple": [], 
                        "Kubernetes Pod/proxy Get": [], 
                        "Kubernetes Pod/proxy List": [], 
                        "Kubernetes Pod/proxy Patch": [], 
                        "Kubernetes Pod/proxy Update": [], 
                        "Kubernetes Pod/proxy Watch": []
                    }, 
                    "Kubernetes Pod/status": {
                        "Kubernetes Pod/status Create": [], 
                        "Kubernetes Pod/status Delete": [], 
                        "Kubernetes Pod/status Delete Multiple": [], 
                        "Kubernetes Pod/status Get": [], 
                        "Kubernetes Pod/status List": [], 
                        "Kubernetes Pod/status Patch": [], 
                        "Kubernetes Pod/status Update": [], 
                        "Kubernetes Pod/status Watch": []
                    }, 
                    "Kubernetes Replica Set": {
                        "Kubernetes Replica Set Create": [], 
                        "Kubernetes Replica Set Delete": [], 
                        "Kubernetes Replica Set Delete Multiple": [], 
                        "Kubernetes Replica Set Get": [], 
                        "Kubernetes Replica Set List": [], 
                        "Kubernetes Replica Set Patch": [], 
                        "Kubernetes Replica Set Update": [], 
                        "Kubernetes Replica Set Watch": []
                    }, 
                    "Kubernetes Replica Set/scale": {
                        "Kubernetes Replica Set/scale Create": [], 
                        "Kubernetes Replica Set/scale Delete": [], 
                        "Kubernetes Replica Set/scale Delete Multiple": [], 
                        "Kubernetes Replica Set/scale Get": [], 
                        "Kubernetes Replica Set/scale List": [], 
                        "Kubernetes Replica Set/scale Patch": [], 
                        "Kubernetes Replica Set/scale Update": [], 
                        "Kubernetes Replica Set/scale Watch": []
                    }, 
                    "Kubernetes Replica Set/status": {
                        "Kubernetes Replica Set/status Create": [], 
                        "Kubernetes Replica Set/status Delete": [], 
                        "Kubernetes Replica Set/status Delete Multiple": [], 
                        "Kubernetes Replica Set/status Get": [], 
                        "Kubernetes Replica Set/status List": [], 
                        "Kubernetes Replica Set/status Patch": [], 
                        "Kubernetes Replica Set/status Update": [], 
                        "Kubernetes Replica Set/status Watch": []
                    }, 
                    "Kubernetes Replication Controller": {
                        "Kubernetes Replication Controller Create": [], 
                        "Kubernetes Replication Controller Delete": [], 
                        "Kubernetes Replication Controller Delete Multiple": [], 
                        "Kubernetes Replication Controller Get": [], 
                        "Kubernetes Replication Controller List": [], 
                        "Kubernetes Replication Controller Patch": [], 
                        "Kubernetes Replication Controller Update": [], 
                        "Kubernetes Replication Controller Watch": []
                    }, 
                    "Kubernetes Replication Controller/scale": {
                        "Kubernetes Replication Controller/scale Create": [], 
                        "Kubernetes Replication Controller/scale Delete": [], 
                        "Kubernetes Replication Controller/scale Delete Multiple": [], 
                        "Kubernetes Replication Controller/scale Get": [], 
                        "Kubernetes Replication Controller/scale List": [], 
                        "Kubernetes Replication Controller/scale Patch": [], 
                        "Kubernetes Replication Controller/scale Update": [], 
                        "Kubernetes Replication Controller/scale Watch": []
                    }, 
                    "Kubernetes Replication Controller/status": {
                        "Kubernetes Replication Controller/status Create": [], 
                        "Kubernetes Replication Controller/status Delete": [], 
                        "Kubernetes Replication Controller/status Delete Multiple": [], 
                        "Kubernetes Replication Controller/status Get": [], 
                        "Kubernetes Replication Controller/status List": [], 
                        "Kubernetes Replication Controller/status Patch": [], 
                        "Kubernetes Replication Controller/status Update": [], 
                        "Kubernetes Replication Controller/status Watch": []
                    }, 
                    "Kubernetes Resource Quota": {
                        "Kubernetes Resource Quota Create": [], 
                        "Kubernetes Resource Quota Delete": [], 
                        "Kubernetes Resource Quota Delete Multiple": [], 
                        "Kubernetes Resource Quota Get": [], 
                        "Kubernetes Resource Quota List": [], 
                        "Kubernetes Resource Quota Patch": [], 
                        "Kubernetes Resource Quota Update": [], 
                        "Kubernetes Resource Quota Watch": []
                    }, 
                    "Kubernetes Resource Quota/status": {
                        "Kubernetes Resource Quota/status Create": [], 
                        "Kubernetes Resource Quota/status Delete": [], 
                        "Kubernetes Resource Quota/status Delete Multiple": [], 
                        "Kubernetes Resource Quota/status Get": [], 
                        "Kubernetes Resource Quota/status List": [], 
                        "Kubernetes Resource Quota/status Patch": [], 
                        "Kubernetes Resource Quota/status Update": [], 
                        "Kubernetes Resource Quota/status Watch": []
                    }, 
                    "Kubernetes Role": {
                        "Kubernetes Role Create": [], 
                        "Kubernetes Role Delete": [], 
                        "Kubernetes Role Delete Multiple": [], 
                        "Kubernetes Role Get": [], 
                        "Kubernetes Role List": [], 
                        "Kubernetes Role Patch": [], 
                        "Kubernetes Role Update": [], 
                        "Kubernetes Role Watch": []
                    }, 
                    "Kubernetes Role Binding": {
                        "Kubernetes Role Binding Create": [], 
                        "Kubernetes Role Binding Delete": [], 
                        "Kubernetes Role Binding Delete Multiple": [], 
                        "Kubernetes Role Binding Get": [], 
                        "Kubernetes Role Binding List": [], 
                        "Kubernetes Role Binding Patch": [], 
                        "Kubernetes Role Binding Update": [], 
                        "Kubernetes Role Binding Watch": []
                    }, 
                    "Kubernetes Role Binding/status": {
                        "Kubernetes Role Binding/status Create": [], 
                        "Kubernetes Role Binding/status Delete": [], 
                        "Kubernetes Role Binding/status Delete Multiple": [], 
                        "Kubernetes Role Binding/status Get": [], 
                        "Kubernetes Role Binding/status List": [], 
                        "Kubernetes Role Binding/status Patch": [], 
                        "Kubernetes Role Binding/status Update": [], 
                        "Kubernetes Role Binding/status Watch": []
                    }, 
                    "Kubernetes Role/status": {
                        "Kubernetes Role/status Create": [], 
                        "Kubernetes Role/status Delete": [], 
                        "Kubernetes Role/status Delete Multiple": [], 
                        "Kubernetes Role/status Get": [], 
                        "Kubernetes Role/status List": [], 
                        "Kubernetes Role/status Patch": [], 
                        "Kubernetes Role/status Update": [], 
                        "Kubernetes Role/status Watch": []
                    }, 
                    "Kubernetes Secret": {
                        "Kubernetes Secret Create": [], 
                        "Kubernetes Secret Delete": [], 
                        "Kubernetes Secret Delete Multiple": [], 
                        "Kubernetes Secret Get": [], 
                        "Kubernetes Secret List": [], 
                        "Kubernetes Secret Patch": [], 
                        "Kubernetes Secret Update": [], 
                        "Kubernetes Secret Watch": []
                    }, 
                    "Kubernetes Secret/status": {
                        "Kubernetes Secret/status Create": [], 
                        "Kubernetes Secret/status Delete": [], 
                        "Kubernetes Secret/status Delete Multiple": [], 
                        "Kubernetes Secret/status Get": [], 
                        "Kubernetes Secret/status List": [], 
                        "Kubernetes Secret/status Patch": [], 
                        "Kubernetes Secret/status Update": [], 
                        "Kubernetes Secret/status Watch": []
                    }, 
                    "Kubernetes Service": {
                        "Kubernetes Service Create": [], 
                        "Kubernetes Service Delete": [], 
                        "Kubernetes Service Delete Multiple": [], 
                        "Kubernetes Service Get": [], 
                        "Kubernetes Service List": [], 
                        "Kubernetes Service Patch": [], 
                        "Kubernetes Service Update": [], 
                        "Kubernetes Service Watch": []
                    }, 
                    "Kubernetes Service Account": {
                        "Kubernetes Service Account Create": [], 
                        "Kubernetes Service Account Delete": [], 
                        "Kubernetes Service Account Delete Multiple": [], 
                        "Kubernetes Service Account Get": [], 
                        "Kubernetes Service Account Impersonate": [], 
                        "Kubernetes Service Account List": [], 
                        "Kubernetes Service Account Patch": [], 
                        "Kubernetes Service Account Update": [], 
                        "Kubernetes Service Account Watch": []
                    }, 
                    "Kubernetes Service Account/status": {
                        "Kubernetes Service Account/status Create": [], 
                        "Kubernetes Service Account/status Delete": [], 
                        "Kubernetes Service Account/status Delete Multiple": [], 
                        "Kubernetes Service Account/status Get": [], 
                        "Kubernetes Service Account/status List": [], 
                        "Kubernetes Service Account/status Patch": [], 
                        "Kubernetes Service Account/status Update": [], 
                        "Kubernetes Service Account/status Watch": []
                    }, 
                    "Kubernetes Service Account/token": {
                        "Kubernetes Service Account/token Create": [], 
                        "Kubernetes Service Account/token Delete": [], 
                        "Kubernetes Service Account/token Delete Multiple": [], 
                        "Kubernetes Service Account/token Get": [], 
                        "Kubernetes Service Account/token List": [], 
                        "Kubernetes Service Account/token Patch": [], 
                        "Kubernetes Service Account/token Update": [], 
                        "Kubernetes Service Account/token Watch": []
                    }, 
                    "Kubernetes Service/proxy": {
                        "Kubernetes Service/proxy Create": [], 
                        "Kubernetes Service/proxy Delete": [], 
                        "Kubernetes Service/proxy Delete Multiple": [], 
                        "Kubernetes Service/proxy Get": [], 
                        "Kubernetes Service/proxy List": [], 
                        "Kubernetes Service/proxy Patch": [], 
                        "Kubernetes Service/proxy Update": [], 
                        "Kubernetes Service/proxy Watch": []
                    }, 
                    "Kubernetes Service/status": {
                        "Kubernetes Service/status Create": [], 
                        "Kubernetes Service/status Delete": [], 
                        "Kubernetes Service/status Delete Multiple": [], 
                        "Kubernetes Service/status Get": [], 
                        "Kubernetes Service/status List": [], 
                        "Kubernetes Service/status Patch": [], 
                        "Kubernetes Service/status Update": [], 
                        "Kubernetes Service/status Watch": []
                    }, 
                    "Kubernetes Stack": {
                        "Kubernetes Stack Create": [], 
                        "Kubernetes Stack Delete": [], 
                        "Kubernetes Stack Delete Multiple": [], 
                        "Kubernetes Stack Get": [], 
                        "Kubernetes Stack List": [], 
                        "Kubernetes Stack Patch": [], 
                        "Kubernetes Stack Update": [], 
                        "Kubernetes Stack Watch": []
                    }, 
                    "Kubernetes Stack/status": {
                        "Kubernetes Stack/status Create": [], 
                        "Kubernetes Stack/status Delete": [], 
                        "Kubernetes Stack/status Delete Multiple": [], 
                        "Kubernetes Stack/status Get": [], 
                        "Kubernetes Stack/status List": [], 
                        "Kubernetes Stack/status Patch": [], 
                        "Kubernetes Stack/status Update": [], 
                        "Kubernetes Stack/status Watch": []
                    }, 
                    "Kubernetes Stateful Set": {
                        "Kubernetes Stateful Set Create": [], 
                        "Kubernetes Stateful Set Delete": [], 
                        "Kubernetes Stateful Set Delete Multiple": [], 
                        "Kubernetes Stateful Set Get": [], 
                        "Kubernetes Stateful Set List": [], 
                        "Kubernetes Stateful Set Patch": [], 
                        "Kubernetes Stateful Set Update": [], 
                        "Kubernetes Stateful Set Watch": []
                    }, 
                    "Kubernetes Stateful Set/scale": {
                        "Kubernetes Stateful Set/scale Create": [], 
                        "Kubernetes Stateful Set/scale Delete": [], 
                        "Kubernetes Stateful Set/scale Delete Multiple": [], 
                        "Kubernetes Stateful Set/scale Get": [], 
                        "Kubernetes Stateful Set/scale List": [], 
                        "Kubernetes Stateful Set/scale Patch": [], 
                        "Kubernetes Stateful Set/scale Update": [], 
                        "Kubernetes Stateful Set/scale Watch": []
                    }, 
                    "Kubernetes Stateful Set/status": {
                        "Kubernetes Stateful Set/status Create": [], 
                        "Kubernetes Stateful Set/status Delete": [], 
                        "Kubernetes Stateful Set/status Delete Multiple": [], 
                        "Kubernetes Stateful Set/status Get": [], 
                        "Kubernetes Stateful Set/status List": [], 
                        "Kubernetes Stateful Set/status Patch": [], 
                        "Kubernetes Stateful Set/status Update": [], 
                        "Kubernetes Stateful Set/status Watch": []
                    }, 
                    "Kubernetes Storage Class": {
                        "Kubernetes Storage Class Get": [], 
                        "Kubernetes Storage Class List": [], 
                        "Kubernetes Storage Class Watch": []
                    }, 
                    "Kubernetes Storage Class/status": {
                        "Kubernetes Storage Class/status Create": [], 
                        "Kubernetes Storage Class/status Delete": [], 
                        "Kubernetes Storage Class/status Delete Multiple": [], 
                        "Kubernetes Storage Class/status Get": [], 
                        "Kubernetes Storage Class/status List": [], 
                        "Kubernetes Storage Class/status Patch": [], 
                        "Kubernetes Storage Class/status Update": [], 
                        "Kubernetes Storage Class/status Watch": []
                    }, 
                    "Kubernetes Third Party Resource": {
                        "Kubernetes Third Party Resource Create": [], 
                        "Kubernetes Third Party Resource Delete": [], 
                        "Kubernetes Third Party Resource Delete Multiple": [], 
                        "Kubernetes Third Party Resource Get": [], 
                        "Kubernetes Third Party Resource List": [], 
                        "Kubernetes Third Party Resource Patch": [], 
                        "Kubernetes Third Party Resource Update": [], 
                        "Kubernetes Third Party Resource Watch": []
                    }, 
                    "Kubernetes Third Party Resource/status": {
                        "Kubernetes Third Party Resource/status Create": [], 
                        "Kubernetes Third Party Resource/status Delete": [], 
                        "Kubernetes Third Party Resource/status Delete Multiple": [], 
                        "Kubernetes Third Party Resource/status Get": [], 
                        "Kubernetes Third Party Resource/status List": [], 
                        "Kubernetes Third Party Resource/status Patch": [], 
                        "Kubernetes Third Party Resource/status Update": [], 
                        "Kubernetes Third Party Resource/status Watch": []
                    }, 
                    "Kubernetes User": {
                        "Kubernetes User Get": [], 
                        "Kubernetes User List": [], 
                        "Kubernetes User Watch": []
                    }, 
                    "Kubernetes User/status": {
                        "Kubernetes User/status Create": [], 
                        "Kubernetes User/status Delete": [], 
                        "Kubernetes User/status Delete Multiple": [], 
                        "Kubernetes User/status Get": [], 
                        "Kubernetes User/status List": [], 
                        "Kubernetes User/status Patch": [], 
                        "Kubernetes User/status Update": [], 
                        "Kubernetes User/status Watch": []
                    }, 
                    "Network": {
                        "Network Connect": [], 
                        "Network Create": [
                            "Attachable"
                        ], 
                        "Network Disconnect": [], 
                        "Network Remove": [], 
                        "Network View": []
                    }, 
                    "Node": {
                        "Node Schedule": [], 
                        "Node View": []
                    }, 
                    "Secret": {
                        "Secret Create": [], 
                        "Secret Delete": [], 
                        "Secret Update": [], 
                        "Secret Use": [], 
                        "Secret View": []
                    }, 
                    "Service": {
                        "Service Create": [], 
                        "Service Delete": [], 
                        "Service Logs": [], 
                        "Service Update": [], 
                        "Service View": [], 
                        "Service View Tasks": []
                    }, 
                    "Volume": {
                        "Volume Create/Attach": [], 
                        "Volume Remove": [], 
                        "Volume View": []
                    }
                }, 
                "system_role": true
            }, 
            {
                "id": "fullcontrol", 
                "name": "Full Control", 
                "operations": {
                    "Config": {
                        "Config Create": [], 
                        "Config Delete": [], 
                        "Config Update": [], 
                        "Config Use": [], 
                        "Config View": []
                    }, 
                    "Container": {
                        "Container Attach": [], 
                        "Container Changes": [], 
                        "Container Connect": [], 
                        "Container Create": [
                            "IPC Mode", 
                            "PID Mode", 
                            "Host Networking Mode", 
                            "Bridge Networking Mode", 
                            "Privileged", 
                            "Host Bind Mounts", 
                            "Additional Kernel Capabilities", 
                            "User Namespace Mode"
                        ], 
                        "Container Disconnect": [], 
                        "Container Exec": [], 
                        "Container Export": [], 
                        "Container Filesystem Read": [], 
                        "Container Filesystem Write": [], 
                        "Container Kill": [], 
                        "Container Logs": [], 
                        "Container Pause": [], 
                        "Container Remove": [], 
                        "Container Rename": [], 
                        "Container Resize": [], 
                        "Container Restart": [], 
                        "Container Start": [], 
                        "Container Stats": [], 
                        "Container Stop": [], 
                        "Container Top": [], 
                        "Container Unpause": [], 
                        "Container View": [], 
                        "Container Wait": []
                    }, 
                    "Image": {
                        "Image Build": [], 
                        "Image Commit": [], 
                        "Image Create": [], 
                        "Image Export": [], 
                        "Image History": [], 
                        "Image Load": [], 
                        "Image Prune": [], 
                        "Image Push": [], 
                        "Image Remove": [
                            "Force Remove"
                        ], 
                        "Image Search": [], 
                        "Image Tag": [], 
                        "Image View": []
                    }, 
                    "Kubernetes Certificate Signing Request": {
                        "Kubernetes Certificate Signing Request Create": [], 
                        "Kubernetes Certificate Signing Request Delete": [], 
                        "Kubernetes Certificate Signing Request Delete Multiple": [], 
                        "Kubernetes Certificate Signing Request Get": [], 
                        "Kubernetes Certificate Signing Request List": [], 
                        "Kubernetes Certificate Signing Request Patch": [], 
                        "Kubernetes Certificate Signing Request Update": [], 
                        "Kubernetes Certificate Signing Request Watch": []
                    }, 
                    "Kubernetes Certificate Signing Request/approval": {
                        "Kubernetes Certificate Signing Request/approval Create": [], 
                        "Kubernetes Certificate Signing Request/approval Delete": [], 
                        "Kubernetes Certificate Signing Request/approval Delete Multiple": [], 
                        "Kubernetes Certificate Signing Request/approval Get": [], 
                        "Kubernetes Certificate Signing Request/approval List": [], 
                        "Kubernetes Certificate Signing Request/approval Patch": [], 
                        "Kubernetes Certificate Signing Request/approval Update": [], 
                        "Kubernetes Certificate Signing Request/approval Watch": []
                    }, 
                    "Kubernetes Certificate Signing Request/status": {
                        "Kubernetes Certificate Signing Request/status Create": [], 
                        "Kubernetes Certificate Signing Request/status Delete": [], 
                        "Kubernetes Certificate Signing Request/status Delete Multiple": [], 
                        "Kubernetes Certificate Signing Request/status Get": [], 
                        "Kubernetes Certificate Signing Request/status List": [], 
                        "Kubernetes Certificate Signing Request/status Patch": [], 
                        "Kubernetes Certificate Signing Request/status Update": [], 
                        "Kubernetes Certificate Signing Request/status Watch": []
                    }, 
                    "Kubernetes Cluster Role": {
                        "Kubernetes Cluster Role Create": [], 
                        "Kubernetes Cluster Role Delete": [], 
                        "Kubernetes Cluster Role Delete Multiple": [], 
                        "Kubernetes Cluster Role Get": [], 
                        "Kubernetes Cluster Role List": [], 
                        "Kubernetes Cluster Role Patch": [], 
                        "Kubernetes Cluster Role Update": [], 
                        "Kubernetes Cluster Role Watch": []
                    }, 
                    "Kubernetes Cluster Role Binding": {
                        "Kubernetes Cluster Role Binding Create": [], 
                        "Kubernetes Cluster Role Binding Delete": [], 
                        "Kubernetes Cluster Role Binding Delete Multiple": [], 
                        "Kubernetes Cluster Role Binding Get": [], 
                        "Kubernetes Cluster Role Binding List": [], 
                        "Kubernetes Cluster Role Binding Patch": [], 
                        "Kubernetes Cluster Role Binding Update": [], 
                        "Kubernetes Cluster Role Binding Watch": []
                    }, 
                    "Kubernetes Cluster Role Binding/status": {
                        "Kubernetes Cluster Role Binding/status Create": [], 
                        "Kubernetes Cluster Role Binding/status Delete": [], 
                        "Kubernetes Cluster Role Binding/status Delete Multiple": [], 
                        "Kubernetes Cluster Role Binding/status Get": [], 
                        "Kubernetes Cluster Role Binding/status List": [], 
                        "Kubernetes Cluster Role Binding/status Patch": [], 
                        "Kubernetes Cluster Role Binding/status Update": [], 
                        "Kubernetes Cluster Role Binding/status Watch": []
                    }, 
                    "Kubernetes Cluster Role/status": {
                        "Kubernetes Cluster Role/status Create": [], 
                        "Kubernetes Cluster Role/status Delete": [], 
                        "Kubernetes Cluster Role/status Delete Multiple": [], 
                        "Kubernetes Cluster Role/status Get": [], 
                        "Kubernetes Cluster Role/status List": [], 
                        "Kubernetes Cluster Role/status Patch": [], 
                        "Kubernetes Cluster Role/status Update": [], 
                        "Kubernetes Cluster Role/status Watch": []
                    }, 
                    "Kubernetes Component Status": {
                        "Kubernetes Component Status Create": [], 
                        "Kubernetes Component Status Delete": [], 
                        "Kubernetes Component Status Delete Multiple": [], 
                        "Kubernetes Component Status Get": [], 
                        "Kubernetes Component Status List": [], 
                        "Kubernetes Component Status Patch": [], 
                        "Kubernetes Component Status Update": [], 
                        "Kubernetes Component Status Watch": []
                    }, 
                    "Kubernetes Component Status/status": {
                        "Kubernetes Component Status/status Create": [], 
                        "Kubernetes Component Status/status Delete": [], 
                        "Kubernetes Component Status/status Delete Multiple": [], 
                        "Kubernetes Component Status/status Get": [], 
                        "Kubernetes Component Status/status List": [], 
                        "Kubernetes Component Status/status Patch": [], 
                        "Kubernetes Component Status/status Update": [], 
                        "Kubernetes Component Status/status Watch": []
                    }, 
                    "Kubernetes Config Map": {
                        "Kubernetes Config Map Create": [], 
                        "Kubernetes Config Map Delete": [], 
                        "Kubernetes Config Map Delete Multiple": [], 
                        "Kubernetes Config Map Get": [], 
                        "Kubernetes Config Map List": [], 
                        "Kubernetes Config Map Patch": [], 
                        "Kubernetes Config Map Update": [], 
                        "Kubernetes Config Map Watch": []
                    }, 
                    "Kubernetes Config Map/status": {
                        "Kubernetes Config Map/status Create": [], 
                        "Kubernetes Config Map/status Delete": [], 
                        "Kubernetes Config Map/status Delete Multiple": [], 
                        "Kubernetes Config Map/status Get": [], 
                        "Kubernetes Config Map/status List": [], 
                        "Kubernetes Config Map/status Patch": [], 
                        "Kubernetes Config Map/status Update": [], 
                        "Kubernetes Config Map/status Watch": []
                    }, 
                    "Kubernetes Controller Revision": {
                        "Kubernetes Controller Revision Create": [], 
                        "Kubernetes Controller Revision Delete": [], 
                        "Kubernetes Controller Revision Delete Multiple": [], 
                        "Kubernetes Controller Revision Get": [], 
                        "Kubernetes Controller Revision List": [], 
                        "Kubernetes Controller Revision Patch": [], 
                        "Kubernetes Controller Revision Update": [], 
                        "Kubernetes Controller Revision Watch": []
                    }, 
                    "Kubernetes Controller Revision/status": {
                        "Kubernetes Controller Revision/status Create": [], 
                        "Kubernetes Controller Revision/status Delete": [], 
                        "Kubernetes Controller Revision/status Delete Multiple": [], 
                        "Kubernetes Controller Revision/status Get": [], 
                        "Kubernetes Controller Revision/status List": [], 
                        "Kubernetes Controller Revision/status Patch": [], 
                        "Kubernetes Controller Revision/status Update": [], 
                        "Kubernetes Controller Revision/status Watch": []
                    }, 
                    "Kubernetes Cron Job": {
                        "Kubernetes Cron Job Create": [], 
                        "Kubernetes Cron Job Delete": [], 
                        "Kubernetes Cron Job Delete Multiple": [], 
                        "Kubernetes Cron Job Get": [], 
                        "Kubernetes Cron Job List": [], 
                        "Kubernetes Cron Job Patch": [], 
                        "Kubernetes Cron Job Update": [], 
                        "Kubernetes Cron Job Watch": []
                    }, 
                    "Kubernetes Cron Job/status": {
                        "Kubernetes Cron Job/status Create": [], 
                        "Kubernetes Cron Job/status Delete": [], 
                        "Kubernetes Cron Job/status Delete Multiple": [], 
                        "Kubernetes Cron Job/status Get": [], 
                        "Kubernetes Cron Job/status List": [], 
                        "Kubernetes Cron Job/status Patch": [], 
                        "Kubernetes Cron Job/status Update": [], 
                        "Kubernetes Cron Job/status Watch": []
                    }, 
                    "Kubernetes Custom Resource Definition": {
                        "Kubernetes Custom Resource Definition Create": [], 
                        "Kubernetes Custom Resource Definition Delete": [], 
                        "Kubernetes Custom Resource Definition Delete Multiple": [], 
                        "Kubernetes Custom Resource Definition Get": [], 
                        "Kubernetes Custom Resource Definition List": [], 
                        "Kubernetes Custom Resource Definition Patch": [], 
                        "Kubernetes Custom Resource Definition Update": [], 
                        "Kubernetes Custom Resource Definition Watch": []
                    }, 
                    "Kubernetes Custom Resource Definition/status": {
                        "Kubernetes Custom Resource Definition/status Create": [], 
                        "Kubernetes Custom Resource Definition/status Delete": [], 
                        "Kubernetes Custom Resource Definition/status Delete Multiple": [], 
                        "Kubernetes Custom Resource Definition/status Get": [], 
                        "Kubernetes Custom Resource Definition/status List": [], 
                        "Kubernetes Custom Resource Definition/status Patch": [], 
                        "Kubernetes Custom Resource Definition/status Update": [], 
                        "Kubernetes Custom Resource Definition/status Watch": []
                    }, 
                    "Kubernetes Daemonset": {
                        "Kubernetes Daemonset Create": [], 
                        "Kubernetes Daemonset Delete": [], 
                        "Kubernetes Daemonset Delete Multiple": [], 
                        "Kubernetes Daemonset Get": [], 
                        "Kubernetes Daemonset List": [], 
                        "Kubernetes Daemonset Patch": [], 
                        "Kubernetes Daemonset Update": [], 
                        "Kubernetes Daemonset Watch": []
                    }, 
                    "Kubernetes Daemonset/status": {
                        "Kubernetes Daemonset/status Create": [], 
                        "Kubernetes Daemonset/status Delete": [], 
                        "Kubernetes Daemonset/status Delete Multiple": [], 
                        "Kubernetes Daemonset/status Get": [], 
                        "Kubernetes Daemonset/status List": [], 
                        "Kubernetes Daemonset/status Patch": [], 
                        "Kubernetes Daemonset/status Update": [], 
                        "Kubernetes Daemonset/status Watch": []
                    }, 
                    "Kubernetes Deployment": {
                        "Kubernetes Deployment Create": [], 
                        "Kubernetes Deployment Delete": [], 
                        "Kubernetes Deployment Delete Multiple": [], 
                        "Kubernetes Deployment Get": [], 
                        "Kubernetes Deployment List": [], 
                        "Kubernetes Deployment Patch": [], 
                        "Kubernetes Deployment Update": [], 
                        "Kubernetes Deployment Watch": []
                    }, 
                    "Kubernetes Deployment/rollback": {
                        "Kubernetes Deployment/rollback Create": [], 
                        "Kubernetes Deployment/rollback Delete": [], 
                        "Kubernetes Deployment/rollback Delete Multiple": [], 
                        "Kubernetes Deployment/rollback Get": [], 
                        "Kubernetes Deployment/rollback List": [], 
                        "Kubernetes Deployment/rollback Patch": [], 
                        "Kubernetes Deployment/rollback Update": [], 
                        "Kubernetes Deployment/rollback Watch": []
                    }, 
                    "Kubernetes Deployment/scale": {
                        "Kubernetes Deployment/scale Create": [], 
                        "Kubernetes Deployment/scale Delete": [], 
                        "Kubernetes Deployment/scale Delete Multiple": [], 
                        "Kubernetes Deployment/scale Get": [], 
                        "Kubernetes Deployment/scale List": [], 
                        "Kubernetes Deployment/scale Patch": [], 
                        "Kubernetes Deployment/scale Update": [], 
                        "Kubernetes Deployment/scale Watch": []
                    }, 
                    "Kubernetes Deployment/status": {
                        "Kubernetes Deployment/status Create": [], 
                        "Kubernetes Deployment/status Delete": [], 
                        "Kubernetes Deployment/status Delete Multiple": [], 
                        "Kubernetes Deployment/status Get": [], 
                        "Kubernetes Deployment/status List": [], 
                        "Kubernetes Deployment/status Patch": [], 
                        "Kubernetes Deployment/status Update": [], 
                        "Kubernetes Deployment/status Watch": []
                    }, 
                    "Kubernetes Endpoint": {
                        "Kubernetes Endpoint Create": [], 
                        "Kubernetes Endpoint Delete": [], 
                        "Kubernetes Endpoint Delete Multiple": [], 
                        "Kubernetes Endpoint Get": [], 
                        "Kubernetes Endpoint List": [], 
                        "Kubernetes Endpoint Patch": [], 
                        "Kubernetes Endpoint Update": [], 
                        "Kubernetes Endpoint Watch": []
                    }, 
                    "Kubernetes Endpoint/status": {
                        "Kubernetes Endpoint/status Create": [], 
                        "Kubernetes Endpoint/status Delete": [], 
                        "Kubernetes Endpoint/status Delete Multiple": [], 
                        "Kubernetes Endpoint/status Get": [], 
                        "Kubernetes Endpoint/status List": [], 
                        "Kubernetes Endpoint/status Patch": [], 
                        "Kubernetes Endpoint/status Update": [], 
                        "Kubernetes Endpoint/status Watch": []
                    }, 
                    "Kubernetes Event": {
                        "Kubernetes Event Create": [], 
                        "Kubernetes Event Delete": [], 
                        "Kubernetes Event Delete Multiple": [], 
                        "Kubernetes Event Get": [], 
                        "Kubernetes Event List": [], 
                        "Kubernetes Event Patch": [], 
                        "Kubernetes Event Update": [], 
                        "Kubernetes Event Watch": []
                    }, 
                    "Kubernetes Event/status": {
                        "Kubernetes Event/status Create": [], 
                        "Kubernetes Event/status Delete": [], 
                        "Kubernetes Event/status Delete Multiple": [], 
                        "Kubernetes Event/status Get": [], 
                        "Kubernetes Event/status List": [], 
                        "Kubernetes Event/status Patch": [], 
                        "Kubernetes Event/status Update": [], 
                        "Kubernetes Event/status Watch": []
                    }, 
                    "Kubernetes External Admission Hook Configuration": {
                        "Kubernetes External Admission Hook Configuration Create": [], 
                        "Kubernetes External Admission Hook Configuration Delete": [], 
                        "Kubernetes External Admission Hook Configuration Delete Multiple": [], 
                        "Kubernetes External Admission Hook Configuration Get": [], 
                        "Kubernetes External Admission Hook Configuration List": [], 
                        "Kubernetes External Admission Hook Configuration Patch": [], 
                        "Kubernetes External Admission Hook Configuration Update": [], 
                        "Kubernetes External Admission Hook Configuration Watch": []
                    }, 
                    "Kubernetes External Admission Hook Configuration/status": {
                        "Kubernetes External Admission Hook Configuration/status Create": [], 
                        "Kubernetes External Admission Hook Configuration/status Delete": [], 
                        "Kubernetes External Admission Hook Configuration/status Delete Multiple": [], 
                        "Kubernetes External Admission Hook Configuration/status Get": [], 
                        "Kubernetes External Admission Hook Configuration/status List": [], 
                        "Kubernetes External Admission Hook Configuration/status Patch": [], 
                        "Kubernetes External Admission Hook Configuration/status Update": [], 
                        "Kubernetes External Admission Hook Configuration/status Watch": []
                    }, 
                    "Kubernetes Horizontal Pod Autoscaler": {
                        "Kubernetes Horizontal Pod Autoscaler Create": [], 
                        "Kubernetes Horizontal Pod Autoscaler Delete": [], 
                        "Kubernetes Horizontal Pod Autoscaler Delete Multiple": [], 
                        "Kubernetes Horizontal Pod Autoscaler Get": [], 
                        "Kubernetes Horizontal Pod Autoscaler List": [], 
                        "Kubernetes Horizontal Pod Autoscaler Patch": [], 
                        "Kubernetes Horizontal Pod Autoscaler Update": [], 
                        "Kubernetes Horizontal Pod Autoscaler Watch": []
                    }, 
                    "Kubernetes Horizontal Pod Autoscaler/status": {
                        "Kubernetes Horizontal Pod Autoscaler/status Create": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Delete": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Delete Multiple": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Get": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status List": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Patch": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Update": [], 
                        "Kubernetes Horizontal Pod Autoscaler/status Watch": []
                    }, 
                    "Kubernetes Ingress": {
                        "Kubernetes Ingress Create": [], 
                        "Kubernetes Ingress Delete": [], 
                        "Kubernetes Ingress Delete Multiple": [], 
                        "Kubernetes Ingress Get": [], 
                        "Kubernetes Ingress List": [], 
                        "Kubernetes Ingress Patch": [], 
                        "Kubernetes Ingress Update": [], 
                        "Kubernetes Ingress Watch": []
                    }, 
                    "Kubernetes Ingress/status": {
                        "Kubernetes Ingress/status Create": [], 
                        "Kubernetes Ingress/status Delete": [], 
                        "Kubernetes Ingress/status Delete Multiple": [], 
                        "Kubernetes Ingress/status Get": [], 
                        "Kubernetes Ingress/status List": [], 
                        "Kubernetes Ingress/status Patch": [], 
                        "Kubernetes Ingress/status Update": [], 
                        "Kubernetes Ingress/status Watch": []
                    }, 
                    "Kubernetes Initializer Configuration": {
                        "Kubernetes Initializer Configuration Create": [], 
                        "Kubernetes Initializer Configuration Delete": [], 
                        "Kubernetes Initializer Configuration Delete Multiple": [], 
                        "Kubernetes Initializer Configuration Get": [], 
                        "Kubernetes Initializer Configuration List": [], 
                        "Kubernetes Initializer Configuration Patch": [], 
                        "Kubernetes Initializer Configuration Update": [], 
                        "Kubernetes Initializer Configuration Watch": []
                    }, 
                    "Kubernetes Initializer Configuration/status": {
                        "Kubernetes Initializer Configuration/status Create": [], 
                        "Kubernetes Initializer Configuration/status Delete": [], 
                        "Kubernetes Initializer Configuration/status Delete Multiple": [], 
                        "Kubernetes Initializer Configuration/status Get": [], 
                        "Kubernetes Initializer Configuration/status List": [], 
                        "Kubernetes Initializer Configuration/status Patch": [], 
                        "Kubernetes Initializer Configuration/status Update": [], 
                        "Kubernetes Initializer Configuration/status Watch": []
                    }, 
                    "Kubernetes Job": {
                        "Kubernetes Job Create": [], 
                        "Kubernetes Job Delete": [], 
                        "Kubernetes Job Delete Multiple": [], 
                        "Kubernetes Job Get": [], 
                        "Kubernetes Job List": [], 
                        "Kubernetes Job Patch": [], 
                        "Kubernetes Job Update": [], 
                        "Kubernetes Job Watch": []
                    }, 
                    "Kubernetes Job/status": {
                        "Kubernetes Job/status Create": [], 
                        "Kubernetes Job/status Delete": [], 
                        "Kubernetes Job/status Delete Multiple": [], 
                        "Kubernetes Job/status Get": [], 
                        "Kubernetes Job/status List": [], 
                        "Kubernetes Job/status Patch": [], 
                        "Kubernetes Job/status Update": [], 
                        "Kubernetes Job/status Watch": []
                    }, 
                    "Kubernetes Limit Range": {
                        "Kubernetes Limit Range Create": [], 
                        "Kubernetes Limit Range Delete": [], 
                        "Kubernetes Limit Range Delete Multiple": [], 
                        "Kubernetes Limit Range Get": [], 
                        "Kubernetes Limit Range List": [], 
                        "Kubernetes Limit Range Patch": [], 
                        "Kubernetes Limit Range Update": [], 
                        "Kubernetes Limit Range Watch": []
                    }, 
                    "Kubernetes Limit Range/status": {
                        "Kubernetes Limit Range/status Create": [], 
                        "Kubernetes Limit Range/status Delete": [], 
                        "Kubernetes Limit Range/status Delete Multiple": [], 
                        "Kubernetes Limit Range/status Get": [], 
                        "Kubernetes Limit Range/status List": [], 
                        "Kubernetes Limit Range/status Patch": [], 
                        "Kubernetes Limit Range/status Update": [], 
                        "Kubernetes Limit Range/status Watch": []
                    }, 
                    "Kubernetes Namespace": {
                        "Kubernetes Namespace Create": [], 
                        "Kubernetes Namespace Delete": [], 
                        "Kubernetes Namespace Delete Multiple": [], 
                        "Kubernetes Namespace Get": [], 
                        "Kubernetes Namespace List": [], 
                        "Kubernetes Namespace Patch": [], 
                        "Kubernetes Namespace Update": [], 
                        "Kubernetes Namespace Watch": []
                    }, 
                    "Kubernetes Namespace/expansion": {
                        "Kubernetes Namespace/expansion Create": [], 
                        "Kubernetes Namespace/expansion Delete": [], 
                        "Kubernetes Namespace/expansion Delete Multiple": [], 
                        "Kubernetes Namespace/expansion Get": [], 
                        "Kubernetes Namespace/expansion List": [], 
                        "Kubernetes Namespace/expansion Patch": [], 
                        "Kubernetes Namespace/expansion Update": [], 
                        "Kubernetes Namespace/expansion Watch": []
                    }, 
                    "Kubernetes Namespace/status": {
                        "Kubernetes Namespace/status Create": [], 
                        "Kubernetes Namespace/status Delete": [], 
                        "Kubernetes Namespace/status Delete Multiple": [], 
                        "Kubernetes Namespace/status Get": [], 
                        "Kubernetes Namespace/status List": [], 
                        "Kubernetes Namespace/status Patch": [], 
                        "Kubernetes Namespace/status Update": [], 
                        "Kubernetes Namespace/status Watch": []
                    }, 
                    "Kubernetes Network Policy": {
                        "Kubernetes Network Policy Create": [], 
                        "Kubernetes Network Policy Delete": [], 
                        "Kubernetes Network Policy Delete Multiple": [], 
                        "Kubernetes Network Policy Get": [], 
                        "Kubernetes Network Policy List": [], 
                        "Kubernetes Network Policy Patch": [], 
                        "Kubernetes Network Policy Update": [], 
                        "Kubernetes Network Policy Watch": []
                    }, 
                    "Kubernetes Network Policy/status": {
                        "Kubernetes Network Policy/status Create": [], 
                        "Kubernetes Network Policy/status Delete": [], 
                        "Kubernetes Network Policy/status Delete Multiple": [], 
                        "Kubernetes Network Policy/status Get": [], 
                        "Kubernetes Network Policy/status List": [], 
                        "Kubernetes Network Policy/status Patch": [], 
                        "Kubernetes Network Policy/status Update": [], 
                        "Kubernetes Network Policy/status Watch": []
                    }, 
                    "Kubernetes Node": {
                        "Kubernetes Node Create": [], 
                        "Kubernetes Node Delete": [], 
                        "Kubernetes Node Delete Multiple": [], 
                        "Kubernetes Node Get": [], 
                        "Kubernetes Node List": [], 
                        "Kubernetes Node Patch": [], 
                        "Kubernetes Node Update": [], 
                        "Kubernetes Node Watch": []
                    }, 
                    "Kubernetes Node/log": {
                        "Kubernetes Node/log Create": [], 
                        "Kubernetes Node/log Delete": [], 
                        "Kubernetes Node/log Delete Multiple": [], 
                        "Kubernetes Node/log Get": [], 
                        "Kubernetes Node/log List": [], 
                        "Kubernetes Node/log Patch": [], 
                        "Kubernetes Node/log Update": [], 
                        "Kubernetes Node/log Watch": []
                    }, 
                    "Kubernetes Node/metrics": {
                        "Kubernetes Node/metrics Create": [], 
                        "Kubernetes Node/metrics Delete": [], 
                        "Kubernetes Node/metrics Delete Multiple": [], 
                        "Kubernetes Node/metrics Get": [], 
                        "Kubernetes Node/metrics List": [], 
                        "Kubernetes Node/metrics Patch": [], 
                        "Kubernetes Node/metrics Update": [], 
                        "Kubernetes Node/metrics Watch": []
                    }, 
                    "Kubernetes Node/proxy": {
                        "Kubernetes Node/proxy Create": [], 
                        "Kubernetes Node/proxy Delete": [], 
                        "Kubernetes Node/proxy Delete Multiple": [], 
                        "Kubernetes Node/proxy Get": [], 
                        "Kubernetes Node/proxy List": [], 
                        "Kubernetes Node/proxy Patch": [], 
                        "Kubernetes Node/proxy Update": [], 
                        "Kubernetes Node/proxy Watch": []
                    }, 
                    "Kubernetes Node/spec": {
                        "Kubernetes Node/spec Create": [], 
                        "Kubernetes Node/spec Delete": [], 
                        "Kubernetes Node/spec Delete Multiple": [], 
                        "Kubernetes Node/spec Get": [], 
                        "Kubernetes Node/spec List": [], 
                        "Kubernetes Node/spec Patch": [], 
                        "Kubernetes Node/spec Update": [], 
                        "Kubernetes Node/spec Watch": []
                    }, 
                    "Kubernetes Node/stats": {
                        "Kubernetes Node/stats Create": [], 
                        "Kubernetes Node/stats Delete": [], 
                        "Kubernetes Node/stats Delete Multiple": [], 
                        "Kubernetes Node/stats Get": [], 
                        "Kubernetes Node/stats List": [], 
                        "Kubernetes Node/stats Patch": [], 
                        "Kubernetes Node/stats Update": [], 
                        "Kubernetes Node/stats Watch": []
                    }, 
                    "Kubernetes Node/status": {
                        "Kubernetes Node/status Create": [], 
                        "Kubernetes Node/status Delete": [], 
                        "Kubernetes Node/status Delete Multiple": [], 
                        "Kubernetes Node/status Get": [], 
                        "Kubernetes Node/status List": [], 
                        "Kubernetes Node/status Patch": [], 
                        "Kubernetes Node/status Update": [], 
                        "Kubernetes Node/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume": {
                        "Kubernetes Persistent Volume Create": [], 
                        "Kubernetes Persistent Volume Delete": [], 
                        "Kubernetes Persistent Volume Delete Multiple": [], 
                        "Kubernetes Persistent Volume Get": [], 
                        "Kubernetes Persistent Volume List": [], 
                        "Kubernetes Persistent Volume Patch": [], 
                        "Kubernetes Persistent Volume Update": [], 
                        "Kubernetes Persistent Volume Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim": {
                        "Kubernetes Persistent Volume Claim Create": [], 
                        "Kubernetes Persistent Volume Claim Delete": [], 
                        "Kubernetes Persistent Volume Claim Delete Multiple": [], 
                        "Kubernetes Persistent Volume Claim Get": [], 
                        "Kubernetes Persistent Volume Claim List": [], 
                        "Kubernetes Persistent Volume Claim Patch": [], 
                        "Kubernetes Persistent Volume Claim Update": [], 
                        "Kubernetes Persistent Volume Claim Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim/status": {
                        "Kubernetes Persistent Volume Claim/status Create": [], 
                        "Kubernetes Persistent Volume Claim/status Delete": [], 
                        "Kubernetes Persistent Volume Claim/status Delete Multiple": [], 
                        "Kubernetes Persistent Volume Claim/status Get": [], 
                        "Kubernetes Persistent Volume Claim/status List": [], 
                        "Kubernetes Persistent Volume Claim/status Patch": [], 
                        "Kubernetes Persistent Volume Claim/status Update": [], 
                        "Kubernetes Persistent Volume Claim/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume/status": {
                        "Kubernetes Persistent Volume/status Create": [], 
                        "Kubernetes Persistent Volume/status Delete": [], 
                        "Kubernetes Persistent Volume/status Delete Multiple": [], 
                        "Kubernetes Persistent Volume/status Get": [], 
                        "Kubernetes Persistent Volume/status List": [], 
                        "Kubernetes Persistent Volume/status Patch": [], 
                        "Kubernetes Persistent Volume/status Update": [], 
                        "Kubernetes Persistent Volume/status Watch": []
                    }, 
                    "Kubernetes Pod": {
                        "Kubernetes Pod Create": [], 
                        "Kubernetes Pod Delete": [], 
                        "Kubernetes Pod Delete Multiple": [], 
                        "Kubernetes Pod Get": [], 
                        "Kubernetes Pod List": [], 
                        "Kubernetes Pod Patch": [], 
                        "Kubernetes Pod Update": [], 
                        "Kubernetes Pod Watch": []
                    }, 
                    "Kubernetes Pod Disruption Budget": {
                        "Kubernetes Pod Disruption Budget Create": [], 
                        "Kubernetes Pod Disruption Budget Delete": [], 
                        "Kubernetes Pod Disruption Budget Delete Multiple": [], 
                        "Kubernetes Pod Disruption Budget Get": [], 
                        "Kubernetes Pod Disruption Budget List": [], 
                        "Kubernetes Pod Disruption Budget Patch": [], 
                        "Kubernetes Pod Disruption Budget Update": [], 
                        "Kubernetes Pod Disruption Budget Watch": []
                    }, 
                    "Kubernetes Pod Disruption Budget/status": {
                        "Kubernetes Pod Disruption Budget/status Create": [], 
                        "Kubernetes Pod Disruption Budget/status Delete": [], 
                        "Kubernetes Pod Disruption Budget/status Delete Multiple": [], 
                        "Kubernetes Pod Disruption Budget/status Get": [], 
                        "Kubernetes Pod Disruption Budget/status List": [], 
                        "Kubernetes Pod Disruption Budget/status Patch": [], 
                        "Kubernetes Pod Disruption Budget/status Update": [], 
                        "Kubernetes Pod Disruption Budget/status Watch": []
                    }, 
                    "Kubernetes Pod Preset": {
                        "Kubernetes Pod Preset Create": [], 
                        "Kubernetes Pod Preset Delete": [], 
                        "Kubernetes Pod Preset Delete Multiple": [], 
                        "Kubernetes Pod Preset Get": [], 
                        "Kubernetes Pod Preset List": [], 
                        "Kubernetes Pod Preset Patch": [], 
                        "Kubernetes Pod Preset Update": [], 
                        "Kubernetes Pod Preset Watch": []
                    }, 
                    "Kubernetes Pod Preset/status": {
                        "Kubernetes Pod Preset/status Create": [], 
                        "Kubernetes Pod Preset/status Delete": [], 
                        "Kubernetes Pod Preset/status Delete Multiple": [], 
                        "Kubernetes Pod Preset/status Get": [], 
                        "Kubernetes Pod Preset/status List": [], 
                        "Kubernetes Pod Preset/status Patch": [], 
                        "Kubernetes Pod Preset/status Update": [], 
                        "Kubernetes Pod Preset/status Watch": []
                    }, 
                    "Kubernetes Pod Security Policy": {
                        "Kubernetes Pod Security Policy Create": [], 
                        "Kubernetes Pod Security Policy Delete": [], 
                        "Kubernetes Pod Security Policy Delete Multiple": [], 
                        "Kubernetes Pod Security Policy Get": [], 
                        "Kubernetes Pod Security Policy List": [], 
                        "Kubernetes Pod Security Policy Patch": [], 
                        "Kubernetes Pod Security Policy Update": [], 
                        "Kubernetes Pod Security Policy Watch": []
                    }, 
                    "Kubernetes Pod Security Policy/status": {
                        "Kubernetes Pod Security Policy/status Create": [], 
                        "Kubernetes Pod Security Policy/status Delete": [], 
                        "Kubernetes Pod Security Policy/status Delete Multiple": [], 
                        "Kubernetes Pod Security Policy/status Get": [], 
                        "Kubernetes Pod Security Policy/status List": [], 
                        "Kubernetes Pod Security Policy/status Patch": [], 
                        "Kubernetes Pod Security Policy/status Update": [], 
                        "Kubernetes Pod Security Policy/status Watch": []
                    }, 
                    "Kubernetes Pod Template": {
                        "Kubernetes Pod Template Create": [], 
                        "Kubernetes Pod Template Delete": [], 
                        "Kubernetes Pod Template Delete Multiple": [], 
                        "Kubernetes Pod Template Get": [], 
                        "Kubernetes Pod Template List": [], 
                        "Kubernetes Pod Template Patch": [], 
                        "Kubernetes Pod Template Update": [], 
                        "Kubernetes Pod Template Watch": []
                    }, 
                    "Kubernetes Pod Template/status": {
                        "Kubernetes Pod Template/status Create": [], 
                        "Kubernetes Pod Template/status Delete": [], 
                        "Kubernetes Pod Template/status Delete Multiple": [], 
                        "Kubernetes Pod Template/status Get": [], 
                        "Kubernetes Pod Template/status List": [], 
                        "Kubernetes Pod Template/status Patch": [], 
                        "Kubernetes Pod Template/status Update": [], 
                        "Kubernetes Pod Template/status Watch": []
                    }, 
                    "Kubernetes Pod/attach": {
                        "Kubernetes Pod/attach Create": [], 
                        "Kubernetes Pod/attach Delete": [], 
                        "Kubernetes Pod/attach Delete Multiple": [], 
                        "Kubernetes Pod/attach Get": [], 
                        "Kubernetes Pod/attach List": [], 
                        "Kubernetes Pod/attach Patch": [], 
                        "Kubernetes Pod/attach Update": [], 
                        "Kubernetes Pod/attach Watch": []
                    }, 
                    "Kubernetes Pod/binding": {
                        "Kubernetes Pod/binding Create": [], 
                        "Kubernetes Pod/binding Delete": [], 
                        "Kubernetes Pod/binding Delete Multiple": [], 
                        "Kubernetes Pod/binding Get": [], 
                        "Kubernetes Pod/binding List": [], 
                        "Kubernetes Pod/binding Patch": [], 
                        "Kubernetes Pod/binding Update": [], 
                        "Kubernetes Pod/binding Watch": []
                    }, 
                    "Kubernetes Pod/eviction": {
                        "Kubernetes Pod/eviction Create": [], 
                        "Kubernetes Pod/eviction Delete": [], 
                        "Kubernetes Pod/eviction Delete Multiple": [], 
                        "Kubernetes Pod/eviction Get": [], 
                        "Kubernetes Pod/eviction List": [], 
                        "Kubernetes Pod/eviction Patch": [], 
                        "Kubernetes Pod/eviction Update": [], 
                        "Kubernetes Pod/eviction Watch": []
                    }, 
                    "Kubernetes Pod/exec": {
                        "Kubernetes Pod/exec Create": [], 
                        "Kubernetes Pod/exec Delete": [], 
                        "Kubernetes Pod/exec Delete Multiple": [], 
                        "Kubernetes Pod/exec Get": [], 
                        "Kubernetes Pod/exec List": [], 
                        "Kubernetes Pod/exec Patch": [], 
                        "Kubernetes Pod/exec Update": [], 
                        "Kubernetes Pod/exec Watch": []
                    }, 
                    "Kubernetes Pod/log": {
                        "Kubernetes Pod/log Create": [], 
                        "Kubernetes Pod/log Delete": [], 
                        "Kubernetes Pod/log Delete Multiple": [], 
                        "Kubernetes Pod/log Get": [], 
                        "Kubernetes Pod/log List": [], 
                        "Kubernetes Pod/log Patch": [], 
                        "Kubernetes Pod/log Update": [], 
                        "Kubernetes Pod/log Watch": []
                    }, 
                    "Kubernetes Pod/portforward": {
                        "Kubernetes Pod/portforward Create": [], 
                        "Kubernetes Pod/portforward Delete": [], 
                        "Kubernetes Pod/portforward Delete Multiple": [], 
                        "Kubernetes Pod/portforward Get": [], 
                        "Kubernetes Pod/portforward List": [], 
                        "Kubernetes Pod/portforward Patch": [], 
                        "Kubernetes Pod/portforward Update": [], 
                        "Kubernetes Pod/portforward Watch": []
                    }, 
                    "Kubernetes Pod/proxy": {
                        "Kubernetes Pod/proxy Create": [], 
                        "Kubernetes Pod/proxy Delete": [], 
                        "Kubernetes Pod/proxy Delete Multiple": [], 
                        "Kubernetes Pod/proxy Get": [], 
                        "Kubernetes Pod/proxy List": [], 
                        "Kubernetes Pod/proxy Patch": [], 
                        "Kubernetes Pod/proxy Update": [], 
                        "Kubernetes Pod/proxy Watch": []
                    }, 
                    "Kubernetes Pod/status": {
                        "Kubernetes Pod/status Create": [], 
                        "Kubernetes Pod/status Delete": [], 
                        "Kubernetes Pod/status Delete Multiple": [], 
                        "Kubernetes Pod/status Get": [], 
                        "Kubernetes Pod/status List": [], 
                        "Kubernetes Pod/status Patch": [], 
                        "Kubernetes Pod/status Update": [], 
                        "Kubernetes Pod/status Watch": []
                    }, 
                    "Kubernetes Replica Set": {
                        "Kubernetes Replica Set Create": [], 
                        "Kubernetes Replica Set Delete": [], 
                        "Kubernetes Replica Set Delete Multiple": [], 
                        "Kubernetes Replica Set Get": [], 
                        "Kubernetes Replica Set List": [], 
                        "Kubernetes Replica Set Patch": [], 
                        "Kubernetes Replica Set Update": [], 
                        "Kubernetes Replica Set Watch": []
                    }, 
                    "Kubernetes Replica Set/scale": {
                        "Kubernetes Replica Set/scale Create": [], 
                        "Kubernetes Replica Set/scale Delete": [], 
                        "Kubernetes Replica Set/scale Delete Multiple": [], 
                        "Kubernetes Replica Set/scale Get": [], 
                        "Kubernetes Replica Set/scale List": [], 
                        "Kubernetes Replica Set/scale Patch": [], 
                        "Kubernetes Replica Set/scale Update": [], 
                        "Kubernetes Replica Set/scale Watch": []
                    }, 
                    "Kubernetes Replica Set/status": {
                        "Kubernetes Replica Set/status Create": [], 
                        "Kubernetes Replica Set/status Delete": [], 
                        "Kubernetes Replica Set/status Delete Multiple": [], 
                        "Kubernetes Replica Set/status Get": [], 
                        "Kubernetes Replica Set/status List": [], 
                        "Kubernetes Replica Set/status Patch": [], 
                        "Kubernetes Replica Set/status Update": [], 
                        "Kubernetes Replica Set/status Watch": []
                    }, 
                    "Kubernetes Replication Controller": {
                        "Kubernetes Replication Controller Create": [], 
                        "Kubernetes Replication Controller Delete": [], 
                        "Kubernetes Replication Controller Delete Multiple": [], 
                        "Kubernetes Replication Controller Get": [], 
                        "Kubernetes Replication Controller List": [], 
                        "Kubernetes Replication Controller Patch": [], 
                        "Kubernetes Replication Controller Update": [], 
                        "Kubernetes Replication Controller Watch": []
                    }, 
                    "Kubernetes Replication Controller/scale": {
                        "Kubernetes Replication Controller/scale Create": [], 
                        "Kubernetes Replication Controller/scale Delete": [], 
                        "Kubernetes Replication Controller/scale Delete Multiple": [], 
                        "Kubernetes Replication Controller/scale Get": [], 
                        "Kubernetes Replication Controller/scale List": [], 
                        "Kubernetes Replication Controller/scale Patch": [], 
                        "Kubernetes Replication Controller/scale Update": [], 
                        "Kubernetes Replication Controller/scale Watch": []
                    }, 
                    "Kubernetes Replication Controller/status": {
                        "Kubernetes Replication Controller/status Create": [], 
                        "Kubernetes Replication Controller/status Delete": [], 
                        "Kubernetes Replication Controller/status Delete Multiple": [], 
                        "Kubernetes Replication Controller/status Get": [], 
                        "Kubernetes Replication Controller/status List": [], 
                        "Kubernetes Replication Controller/status Patch": [], 
                        "Kubernetes Replication Controller/status Update": [], 
                        "Kubernetes Replication Controller/status Watch": []
                    }, 
                    "Kubernetes Resource Quota": {
                        "Kubernetes Resource Quota Create": [], 
                        "Kubernetes Resource Quota Delete": [], 
                        "Kubernetes Resource Quota Delete Multiple": [], 
                        "Kubernetes Resource Quota Get": [], 
                        "Kubernetes Resource Quota List": [], 
                        "Kubernetes Resource Quota Patch": [], 
                        "Kubernetes Resource Quota Update": [], 
                        "Kubernetes Resource Quota Watch": []
                    }, 
                    "Kubernetes Resource Quota/status": {
                        "Kubernetes Resource Quota/status Create": [], 
                        "Kubernetes Resource Quota/status Delete": [], 
                        "Kubernetes Resource Quota/status Delete Multiple": [], 
                        "Kubernetes Resource Quota/status Get": [], 
                        "Kubernetes Resource Quota/status List": [], 
                        "Kubernetes Resource Quota/status Patch": [], 
                        "Kubernetes Resource Quota/status Update": [], 
                        "Kubernetes Resource Quota/status Watch": []
                    }, 
                    "Kubernetes Role": {
                        "Kubernetes Role Create": [], 
                        "Kubernetes Role Delete": [], 
                        "Kubernetes Role Delete Multiple": [], 
                        "Kubernetes Role Get": [], 
                        "Kubernetes Role List": [], 
                        "Kubernetes Role Patch": [], 
                        "Kubernetes Role Update": [], 
                        "Kubernetes Role Watch": []
                    }, 
                    "Kubernetes Role Binding": {
                        "Kubernetes Role Binding Create": [], 
                        "Kubernetes Role Binding Delete": [], 
                        "Kubernetes Role Binding Delete Multiple": [], 
                        "Kubernetes Role Binding Get": [], 
                        "Kubernetes Role Binding List": [], 
                        "Kubernetes Role Binding Patch": [], 
                        "Kubernetes Role Binding Update": [], 
                        "Kubernetes Role Binding Watch": []
                    }, 
                    "Kubernetes Role Binding/status": {
                        "Kubernetes Role Binding/status Create": [], 
                        "Kubernetes Role Binding/status Delete": [], 
                        "Kubernetes Role Binding/status Delete Multiple": [], 
                        "Kubernetes Role Binding/status Get": [], 
                        "Kubernetes Role Binding/status List": [], 
                        "Kubernetes Role Binding/status Patch": [], 
                        "Kubernetes Role Binding/status Update": [], 
                        "Kubernetes Role Binding/status Watch": []
                    }, 
                    "Kubernetes Role/status": {
                        "Kubernetes Role/status Create": [], 
                        "Kubernetes Role/status Delete": [], 
                        "Kubernetes Role/status Delete Multiple": [], 
                        "Kubernetes Role/status Get": [], 
                        "Kubernetes Role/status List": [], 
                        "Kubernetes Role/status Patch": [], 
                        "Kubernetes Role/status Update": [], 
                        "Kubernetes Role/status Watch": []
                    }, 
                    "Kubernetes Secret": {
                        "Kubernetes Secret Create": [], 
                        "Kubernetes Secret Delete": [], 
                        "Kubernetes Secret Delete Multiple": [], 
                        "Kubernetes Secret Get": [], 
                        "Kubernetes Secret List": [], 
                        "Kubernetes Secret Patch": [], 
                        "Kubernetes Secret Update": [], 
                        "Kubernetes Secret Watch": []
                    }, 
                    "Kubernetes Secret/status": {
                        "Kubernetes Secret/status Create": [], 
                        "Kubernetes Secret/status Delete": [], 
                        "Kubernetes Secret/status Delete Multiple": [], 
                        "Kubernetes Secret/status Get": [], 
                        "Kubernetes Secret/status List": [], 
                        "Kubernetes Secret/status Patch": [], 
                        "Kubernetes Secret/status Update": [], 
                        "Kubernetes Secret/status Watch": []
                    }, 
                    "Kubernetes Service": {
                        "Kubernetes Service Create": [], 
                        "Kubernetes Service Delete": [], 
                        "Kubernetes Service Delete Multiple": [], 
                        "Kubernetes Service Get": [], 
                        "Kubernetes Service List": [], 
                        "Kubernetes Service Patch": [], 
                        "Kubernetes Service Update": [], 
                        "Kubernetes Service Watch": []
                    }, 
                    "Kubernetes Service Account": {
                        "Kubernetes Service Account Create": [], 
                        "Kubernetes Service Account Delete": [], 
                        "Kubernetes Service Account Delete Multiple": [], 
                        "Kubernetes Service Account Get": [], 
                        "Kubernetes Service Account Impersonate": [], 
                        "Kubernetes Service Account List": [], 
                        "Kubernetes Service Account Patch": [], 
                        "Kubernetes Service Account Update": [], 
                        "Kubernetes Service Account Watch": []
                    }, 
                    "Kubernetes Service Account/status": {
                        "Kubernetes Service Account/status Create": [], 
                        "Kubernetes Service Account/status Delete": [], 
                        "Kubernetes Service Account/status Delete Multiple": [], 
                        "Kubernetes Service Account/status Get": [], 
                        "Kubernetes Service Account/status List": [], 
                        "Kubernetes Service Account/status Patch": [], 
                        "Kubernetes Service Account/status Update": [], 
                        "Kubernetes Service Account/status Watch": []
                    }, 
                    "Kubernetes Service Account/token": {
                        "Kubernetes Service Account/token Create": [], 
                        "Kubernetes Service Account/token Delete": [], 
                        "Kubernetes Service Account/token Delete Multiple": [], 
                        "Kubernetes Service Account/token Get": [], 
                        "Kubernetes Service Account/token List": [], 
                        "Kubernetes Service Account/token Patch": [], 
                        "Kubernetes Service Account/token Update": [], 
                        "Kubernetes Service Account/token Watch": []
                    }, 
                    "Kubernetes Service/proxy": {
                        "Kubernetes Service/proxy Create": [], 
                        "Kubernetes Service/proxy Delete": [], 
                        "Kubernetes Service/proxy Delete Multiple": [], 
                        "Kubernetes Service/proxy Get": [], 
                        "Kubernetes Service/proxy List": [], 
                        "Kubernetes Service/proxy Patch": [], 
                        "Kubernetes Service/proxy Update": [], 
                        "Kubernetes Service/proxy Watch": []
                    }, 
                    "Kubernetes Service/status": {
                        "Kubernetes Service/status Create": [], 
                        "Kubernetes Service/status Delete": [], 
                        "Kubernetes Service/status Delete Multiple": [], 
                        "Kubernetes Service/status Get": [], 
                        "Kubernetes Service/status List": [], 
                        "Kubernetes Service/status Patch": [], 
                        "Kubernetes Service/status Update": [], 
                        "Kubernetes Service/status Watch": []
                    }, 
                    "Kubernetes Stack": {
                        "Kubernetes Stack Create": [], 
                        "Kubernetes Stack Delete": [], 
                        "Kubernetes Stack Delete Multiple": [], 
                        "Kubernetes Stack Get": [], 
                        "Kubernetes Stack List": [], 
                        "Kubernetes Stack Patch": [], 
                        "Kubernetes Stack Update": [], 
                        "Kubernetes Stack Watch": []
                    }, 
                    "Kubernetes Stack/status": {
                        "Kubernetes Stack/status Create": [], 
                        "Kubernetes Stack/status Delete": [], 
                        "Kubernetes Stack/status Delete Multiple": [], 
                        "Kubernetes Stack/status Get": [], 
                        "Kubernetes Stack/status List": [], 
                        "Kubernetes Stack/status Patch": [], 
                        "Kubernetes Stack/status Update": [], 
                        "Kubernetes Stack/status Watch": []
                    }, 
                    "Kubernetes Stateful Set": {
                        "Kubernetes Stateful Set Create": [], 
                        "Kubernetes Stateful Set Delete": [], 
                        "Kubernetes Stateful Set Delete Multiple": [], 
                        "Kubernetes Stateful Set Get": [], 
                        "Kubernetes Stateful Set List": [], 
                        "Kubernetes Stateful Set Patch": [], 
                        "Kubernetes Stateful Set Update": [], 
                        "Kubernetes Stateful Set Watch": []
                    }, 
                    "Kubernetes Stateful Set/scale": {
                        "Kubernetes Stateful Set/scale Create": [], 
                        "Kubernetes Stateful Set/scale Delete": [], 
                        "Kubernetes Stateful Set/scale Delete Multiple": [], 
                        "Kubernetes Stateful Set/scale Get": [], 
                        "Kubernetes Stateful Set/scale List": [], 
                        "Kubernetes Stateful Set/scale Patch": [], 
                        "Kubernetes Stateful Set/scale Update": [], 
                        "Kubernetes Stateful Set/scale Watch": []
                    }, 
                    "Kubernetes Stateful Set/status": {
                        "Kubernetes Stateful Set/status Create": [], 
                        "Kubernetes Stateful Set/status Delete": [], 
                        "Kubernetes Stateful Set/status Delete Multiple": [], 
                        "Kubernetes Stateful Set/status Get": [], 
                        "Kubernetes Stateful Set/status List": [], 
                        "Kubernetes Stateful Set/status Patch": [], 
                        "Kubernetes Stateful Set/status Update": [], 
                        "Kubernetes Stateful Set/status Watch": []
                    }, 
                    "Kubernetes Storage Class": {
                        "Kubernetes Storage Class Create": [], 
                        "Kubernetes Storage Class Delete": [], 
                        "Kubernetes Storage Class Delete Multiple": [], 
                        "Kubernetes Storage Class Get": [], 
                        "Kubernetes Storage Class List": [], 
                        "Kubernetes Storage Class Patch": [], 
                        "Kubernetes Storage Class Update": [], 
                        "Kubernetes Storage Class Watch": []
                    }, 
                    "Kubernetes Storage Class/status": {
                        "Kubernetes Storage Class/status Create": [], 
                        "Kubernetes Storage Class/status Delete": [], 
                        "Kubernetes Storage Class/status Delete Multiple": [], 
                        "Kubernetes Storage Class/status Get": [], 
                        "Kubernetes Storage Class/status List": [], 
                        "Kubernetes Storage Class/status Patch": [], 
                        "Kubernetes Storage Class/status Update": [], 
                        "Kubernetes Storage Class/status Watch": []
                    }, 
                    "Kubernetes Third Party Resource": {
                        "Kubernetes Third Party Resource Create": [], 
                        "Kubernetes Third Party Resource Delete": [], 
                        "Kubernetes Third Party Resource Delete Multiple": [], 
                        "Kubernetes Third Party Resource Get": [], 
                        "Kubernetes Third Party Resource List": [], 
                        "Kubernetes Third Party Resource Patch": [], 
                        "Kubernetes Third Party Resource Update": [], 
                        "Kubernetes Third Party Resource Watch": []
                    }, 
                    "Kubernetes Third Party Resource/status": {
                        "Kubernetes Third Party Resource/status Create": [], 
                        "Kubernetes Third Party Resource/status Delete": [], 
                        "Kubernetes Third Party Resource/status Delete Multiple": [], 
                        "Kubernetes Third Party Resource/status Get": [], 
                        "Kubernetes Third Party Resource/status List": [], 
                        "Kubernetes Third Party Resource/status Patch": [], 
                        "Kubernetes Third Party Resource/status Update": [], 
                        "Kubernetes Third Party Resource/status Watch": []
                    }, 
                    "Kubernetes User": {
                        "Kubernetes User Create": [], 
                        "Kubernetes User Delete": [], 
                        "Kubernetes User Delete Multiple": [], 
                        "Kubernetes User Get": [], 
                        "Kubernetes User Impersonate": [], 
                        "Kubernetes User List": [], 
                        "Kubernetes User Patch": [], 
                        "Kubernetes User Update": [], 
                        "Kubernetes User Watch": []
                    }, 
                    "Kubernetes User/status": {
                        "Kubernetes User/status Create": [], 
                        "Kubernetes User/status Delete": [], 
                        "Kubernetes User/status Delete Multiple": [], 
                        "Kubernetes User/status Get": [], 
                        "Kubernetes User/status List": [], 
                        "Kubernetes User/status Patch": [], 
                        "Kubernetes User/status Update": [], 
                        "Kubernetes User/status Watch": []
                    }, 
                    "Network": {
                        "Network Connect": [], 
                        "Network Create": [
                            "Attachable"
                        ], 
                        "Network Disconnect": [], 
                        "Network Remove": [], 
                        "Network View": []
                    }, 
                    "Node": {
                        "Node Schedule": [], 
                        "Node Update": [], 
                        "Node View": []
                    }, 
                    "Secret": {
                        "Secret Create": [], 
                        "Secret Delete": [], 
                        "Secret Update": [], 
                        "Secret Use": [], 
                        "Secret View": []
                    }, 
                    "Service": {
                        "Service Create": [
                            "Credential Spec", 
                            "Host Bind Mounts", 
                            "Host Networking Mode", 
                            "Bridge Networking Mode"
                        ], 
                        "Service Delete": [], 
                        "Service Logs": [], 
                        "Service Update": [
                            "Credential Spec", 
                            "Host Bind Mounts", 
                            "Host Networking Mode", 
                            "Bridge Networking Mode"
                        ], 
                        "Service View": [], 
                        "Service View Tasks": []
                    }, 
                    "Volume": {
                        "Volume Create/Attach": [
                            "Local Driver Options"
                        ], 
                        "Volume Remove": [], 
                        "Volume View": []
                    }
                }, 
                "system_role": true
            }, 
            {
                "id": "6a39ff6c-b723-4f14-bfa8-fdcfe5141274", 
                "name": "nfs-provisioner-runner", 
                "operations": {
                    "Kubernetes Endpoint": {
                        "Kubernetes Endpoint Create": [], 
                        "Kubernetes Endpoint Delete": [], 
                        "Kubernetes Endpoint Delete Multiple": [], 
                        "Kubernetes Endpoint Get": [], 
                        "Kubernetes Endpoint List": [], 
                        "Kubernetes Endpoint Patch": [], 
                        "Kubernetes Endpoint Update": [], 
                        "Kubernetes Endpoint Watch": []
                    }, 
                    "Kubernetes Endpoint/status": {
                        "Kubernetes Endpoint/status Create": [], 
                        "Kubernetes Endpoint/status Delete": [], 
                        "Kubernetes Endpoint/status Delete Multiple": [], 
                        "Kubernetes Endpoint/status Get": [], 
                        "Kubernetes Endpoint/status List": [], 
                        "Kubernetes Endpoint/status Patch": [], 
                        "Kubernetes Endpoint/status Update": [], 
                        "Kubernetes Endpoint/status Watch": []
                    }, 
                    "Kubernetes Event": {
                        "Kubernetes Event Create": [], 
                        "Kubernetes Event Delete": [], 
                        "Kubernetes Event Delete Multiple": [], 
                        "Kubernetes Event Get": [], 
                        "Kubernetes Event List": [], 
                        "Kubernetes Event Patch": [], 
                        "Kubernetes Event Update": [], 
                        "Kubernetes Event Watch": []
                    }, 
                    "Kubernetes Event/status": {
                        "Kubernetes Event/status Create": [], 
                        "Kubernetes Event/status Delete": [], 
                        "Kubernetes Event/status Delete Multiple": [], 
                        "Kubernetes Event/status Get": [], 
                        "Kubernetes Event/status List": [], 
                        "Kubernetes Event/status Patch": [], 
                        "Kubernetes Event/status Update": [], 
                        "Kubernetes Event/status Watch": []
                    }, 
                    "Kubernetes Persistent Volume": {
                        "Kubernetes Persistent Volume Create": [], 
                        "Kubernetes Persistent Volume Delete": [], 
                        "Kubernetes Persistent Volume Get": [], 
                        "Kubernetes Persistent Volume List": [], 
                        "Kubernetes Persistent Volume Patch": [], 
                        "Kubernetes Persistent Volume Watch": []
                    }, 
                    "Kubernetes Persistent Volume Claim": {
                        "Kubernetes Persistent Volume Claim Get": [], 
                        "Kubernetes Persistent Volume Claim List": [], 
                        "Kubernetes Persistent Volume Claim Update": [], 
                        "Kubernetes Persistent Volume Claim Watch": []
                    }, 
                    "Kubernetes Pod Security Policy": {
                        "Kubernetes Pod Security Policy Create": [], 
                        "Kubernetes Pod Security Policy Delete": [], 
                        "Kubernetes Pod Security Policy Delete Multiple": [], 
                        "Kubernetes Pod Security Policy Get": [], 
                        "Kubernetes Pod Security Policy List": [], 
                        "Kubernetes Pod Security Policy Patch": [], 
                        "Kubernetes Pod Security Policy Update": [], 
                        "Kubernetes Pod Security Policy Watch": []
                    }, 
                    "Kubernetes Pod Security Policy/status": {
                        "Kubernetes Pod Security Policy/status Create": [], 
                        "Kubernetes Pod Security Policy/status Delete": [], 
                        "Kubernetes Pod Security Policy/status Delete Multiple": [], 
                        "Kubernetes Pod Security Policy/status Get": [], 
                        "Kubernetes Pod Security Policy/status List": [], 
                        "Kubernetes Pod Security Policy/status Patch": [], 
                        "Kubernetes Pod Security Policy/status Update": [], 
                        "Kubernetes Pod Security Policy/status Watch": []
                    }, 
                    "Kubernetes Service": {
                        "Kubernetes Service Create": [], 
                        "Kubernetes Service Delete": [], 
                        "Kubernetes Service Delete Multiple": [], 
                        "Kubernetes Service Get": [], 
                        "Kubernetes Service List": [], 
                        "Kubernetes Service Patch": [], 
                        "Kubernetes Service Update": [], 
                        "Kubernetes Service Watch": []
                    }, 
                    "Kubernetes Storage Class": {
                        "Kubernetes Storage Class Create": [], 
                        "Kubernetes Storage Class Delete": [], 
                        "Kubernetes Storage Class Delete Multiple": [], 
                        "Kubernetes Storage Class Get": [], 
                        "Kubernetes Storage Class List": [], 
                        "Kubernetes Storage Class Patch": [], 
                        "Kubernetes Storage Class Update": [], 
                        "Kubernetes Storage Class Watch": []
                    }
                }, 
                "system_role": false
            }
        ], 
        "msg": "OK (unknown bytes)", 
        "redirected": false, 
        "status": 200, 
        "transfer_encoding": "chunked", 
        "ucp_version": "3.0.4 (0493274)", 
        "url": "https://clh-ucp01.cloudra.local/roles", 
        "x_content_type_options": "nosniff", 
        "x_frame_options": "sameorigin", 
        "x_server_ip": "10.60.59.11", 
        "x_server_name": "clh-ucp01.cloudra.local", 
        "x_xss_protection": "1; mode=block"
    }
}
2018-08-30 12:25:18,676 p=5907 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:25:18,706 p=5907 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:25:18,710 p=5907 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:25:18,710 p=5907 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:25:18,710 p=5907 u=root |  localhost                  : ok=10   changed=0    unreachable=0    failed=1   
2018-08-30 12:31:29,860 p=6197 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:31:29,869 p=6197 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:31:29,899 p=6197 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:31:29,904 p=6197 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:31:29,921 p=6197 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:31:29,926 p=6197 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:31:29,944 p=6197 u=root |  ok: [localhost]
2018-08-30 12:31:29,960 p=6197 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:31:30,562 p=6197 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:31:30,566 p=6197 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:31:30,570 p=6197 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:31:30,578 p=6197 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:31:30,602 p=6197 u=root |  ok: [localhost]
2018-08-30 12:31:30,607 p=6197 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:31:30,633 p=6197 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:31:30,636 p=6197 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:31:30,640 p=6197 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:31:30,649 p=6197 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:31:30,664 p=6197 u=root |  skipping: [localhost]
2018-08-30 12:31:30,673 p=6197 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:31:31,188 p=6197 u=root |  ok: [localhost]
2018-08-30 12:31:31,195 p=6197 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:31:31,223 p=6197 u=root |  ok: [localhost]
2018-08-30 12:31:31,228 p=6197 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:31:31,636 p=6197 u=root |  ok: [localhost]
2018-08-30 12:31:31,640 p=6197 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:31:31,675 p=6197 u=root |  ok: [localhost]
2018-08-30 12:31:31,683 p=6197 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:31:31,714 p=6197 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:31:31,717 p=6197 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:31:31,717 p=6197 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:31:31,717 p=6197 u=root |  localhost                  : ok=10   changed=0    unreachable=0    failed=1   
2018-08-30 12:32:42,281 p=6326 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:32:42,290 p=6326 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:32:42,320 p=6326 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:32:42,325 p=6326 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:32:42,341 p=6326 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:32:42,346 p=6326 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:32:42,363 p=6326 u=root |  ok: [localhost]
2018-08-30 12:32:42,377 p=6326 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:32:42,971 p=6326 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:32:42,975 p=6326 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:32:42,979 p=6326 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:32:42,987 p=6326 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:32:43,015 p=6326 u=root |  ok: [localhost]
2018-08-30 12:32:43,021 p=6326 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:32:43,057 p=6326 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:32:43,060 p=6326 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:32:43,065 p=6326 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:32:43,072 p=6326 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:32:43,087 p=6326 u=root |  skipping: [localhost]
2018-08-30 12:32:43,090 p=6326 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:32:43,580 p=6326 u=root |  ok: [localhost]
2018-08-30 12:32:43,587 p=6326 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:32:43,616 p=6326 u=root |  ok: [localhost]
2018-08-30 12:32:43,621 p=6326 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:32:44,040 p=6326 u=root |  ok: [localhost]
2018-08-30 12:32:44,043 p=6326 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:32:44,070 p=6326 u=root |  ok: [localhost]
2018-08-30 12:32:44,076 p=6326 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:32:44,098 p=6326 u=root |  ok: [localhost] => {
    "prom_role[0].id": "VARIABLE IS NOT DEFINED!"
}
2018-08-30 12:32:44,109 p=6326 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:32:44,134 p=6326 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:32:44,136 p=6326 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:32:44,137 p=6326 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:32:44,137 p=6326 u=root |  localhost                  : ok=11   changed=0    unreachable=0    failed=1   
2018-08-30 12:34:15,255 p=6480 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:34:15,269 p=6480 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:34:15,305 p=6480 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:34:15,309 p=6480 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:34:15,335 p=6480 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:34:15,341 p=6480 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:34:15,360 p=6480 u=root |  ok: [localhost]
2018-08-30 12:34:15,369 p=6480 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:34:15,986 p=6480 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:34:15,989 p=6480 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:34:15,993 p=6480 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:34:16,002 p=6480 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:34:16,021 p=6480 u=root |  ok: [localhost]
2018-08-30 12:34:16,025 p=6480 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:34:16,052 p=6480 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:34:16,055 p=6480 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:34:16,059 p=6480 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:34:16,065 p=6480 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:34:16,079 p=6480 u=root |  skipping: [localhost]
2018-08-30 12:34:16,081 p=6480 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:34:16,629 p=6480 u=root |  ok: [localhost]
2018-08-30 12:34:16,633 p=6480 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:34:16,664 p=6480 u=root |  ok: [localhost]
2018-08-30 12:34:16,669 p=6480 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:34:17,129 p=6480 u=root |  ok: [localhost]
2018-08-30 12:34:17,133 p=6480 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:34:17,168 p=6480 u=root |  ok: [localhost]
2018-08-30 12:34:17,174 p=6480 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:34:17,201 p=6480 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 12:34:17,207 p=6480 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:34:17,225 p=6480 u=root |  skipping: [localhost]
2018-08-30 12:34:17,229 p=6480 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:34:17,248 p=6480 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 12:34:17,252 p=6480 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:34:17,269 p=6480 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:34:17,273 p=6480 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:34:17,291 p=6480 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:34:17,292 p=6480 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:34:17,292 p=6480 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:34:17,293 p=6480 u=root |  localhost                  : ok=13   changed=0    unreachable=0    failed=1   
2018-08-30 12:44:50,253 p=6970 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:44:50,263 p=6970 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:44:50,301 p=6970 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:44:50,305 p=6970 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:44:50,322 p=6970 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:44:50,327 p=6970 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:44:50,345 p=6970 u=root |  ok: [localhost]
2018-08-30 12:44:50,355 p=6970 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:44:50,960 p=6970 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:44:50,963 p=6970 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:44:50,966 p=6970 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:44:50,974 p=6970 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:44:51,002 p=6970 u=root |  ok: [localhost]
2018-08-30 12:44:51,007 p=6970 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:44:51,037 p=6970 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:44:51,039 p=6970 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:44:51,042 p=6970 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:44:51,051 p=6970 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:44:51,073 p=6970 u=root |  skipping: [localhost]
2018-08-30 12:44:51,078 p=6970 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:44:51,605 p=6970 u=root |  ok: [localhost]
2018-08-30 12:44:51,613 p=6970 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:44:51,640 p=6970 u=root |  ok: [localhost]
2018-08-30 12:44:51,647 p=6970 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:44:52,059 p=6970 u=root |  ok: [localhost]
2018-08-30 12:44:52,063 p=6970 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:44:52,096 p=6970 u=root |  ok: [localhost]
2018-08-30 12:44:52,103 p=6970 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:44:52,129 p=6970 u=root |  skipping: [localhost]
2018-08-30 12:44:52,138 p=6970 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:44:52,159 p=6970 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 12:44:52,164 p=6970 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:44:52,183 p=6970 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:44:52,187 p=6970 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 12:44:52,781 p=6970 u=root |  changed: [localhost]
2018-08-30 12:44:52,785 p=6970 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 12:44:53,478 p=6970 u=root |  changed: [localhost]
2018-08-30 12:44:53,486 p=6970 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:44:53,506 p=6970 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:44:53,510 p=6970 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:44:53,528 p=6970 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:44:53,529 p=6970 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:44:53,529 p=6970 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:44:53,529 p=6970 u=root |  localhost                  : ok=15   changed=2    unreachable=0    failed=1   
2018-08-30 12:51:08,284 p=7313 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:51:08,293 p=7313 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:51:08,323 p=7313 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:51:08,327 p=7313 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:51:08,344 p=7313 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:51:08,349 p=7313 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:51:08,367 p=7313 u=root |  ok: [localhost]
2018-08-30 12:51:08,382 p=7313 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:51:09,023 p=7313 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:51:09,025 p=7313 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:51:09,029 p=7313 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:51:09,039 p=7313 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:51:09,061 p=7313 u=root |  ok: [localhost]
2018-08-30 12:51:09,065 p=7313 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:51:09,091 p=7313 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:51:09,095 p=7313 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:51:09,099 p=7313 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:51:09,107 p=7313 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:51:09,123 p=7313 u=root |  skipping: [localhost]
2018-08-30 12:51:09,127 p=7313 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:51:09,644 p=7313 u=root |  ok: [localhost]
2018-08-30 12:51:09,648 p=7313 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:51:09,679 p=7313 u=root |  ok: [localhost]
2018-08-30 12:51:09,684 p=7313 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:51:10,085 p=7313 u=root |  ok: [localhost]
2018-08-30 12:51:10,089 p=7313 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:51:10,123 p=7313 u=root |  ok: [localhost]
2018-08-30 12:51:10,129 p=7313 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:51:10,144 p=7313 u=root |  skipping: [localhost]
2018-08-30 12:51:10,147 p=7313 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:51:10,166 p=7313 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 12:51:10,171 p=7313 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:51:10,190 p=7313 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:51:10,195 p=7313 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 12:51:10,787 p=7313 u=root |  changed: [localhost]
2018-08-30 12:51:10,791 p=7313 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 12:51:11,311 p=7313 u=root |  changed: [localhost]
2018-08-30 12:51:11,318 p=7313 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:51:11,335 p=7313 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:51:11,345 p=7313 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:51:11,368 p=7313 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:51:11,370 p=7313 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:51:11,371 p=7313 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:51:11,371 p=7313 u=root |  localhost                  : ok=15   changed=2    unreachable=0    failed=1   
2018-08-30 12:52:27,579 p=7543 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/helm/playbooks/k8s-prom.yml': line 104, column 15, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      uri:
        url: "https://{{ ucp_instance }}.{{ domain_name }}/collectionGrants/system%3Aserviceaccount%3Adefault%3Anfs-provisioner/kubernetesnamespaces/{{ prom_role[0].id }}?type=grantobject"
              ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

exception type: <class 'yaml.parser.ParserError'>
exception: while parsing a block mapping
  in "<unicode string>", line 98, column 7
did not find expected key
  in "<unicode string>", line 104, column 15
2018-08-30 12:52:48,626 p=7560 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 12:52:48,636 p=7560 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:52:48,674 p=7560 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 12:52:48,680 p=7560 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 12:52:48,701 p=7560 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 12:52:48,706 p=7560 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 12:52:48,727 p=7560 u=root |  ok: [localhost]
2018-08-30 12:52:48,748 p=7560 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 12:52:49,430 p=7560 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:52:49,436 p=7560 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:52:49,440 p=7560 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:52:49,448 p=7560 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:52:49,465 p=7560 u=root |  ok: [localhost]
2018-08-30 12:52:49,469 p=7560 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 12:52:49,494 p=7560 u=root |  ok: [localhost] => (item=None)
2018-08-30 12:52:49,497 p=7560 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:52:49,501 p=7560 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 12:52:49,507 p=7560 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:52:49,520 p=7560 u=root |  skipping: [localhost]
2018-08-30 12:52:49,523 p=7560 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 12:52:50,038 p=7560 u=root |  ok: [localhost]
2018-08-30 12:52:50,043 p=7560 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 12:52:50,074 p=7560 u=root |  ok: [localhost]
2018-08-30 12:52:50,079 p=7560 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 12:52:50,489 p=7560 u=root |  ok: [localhost]
2018-08-30 12:52:50,492 p=7560 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 12:52:50,526 p=7560 u=root |  ok: [localhost]
2018-08-30 12:52:50,533 p=7560 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:52:50,549 p=7560 u=root |  skipping: [localhost]
2018-08-30 12:52:50,553 p=7560 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:52:50,572 p=7560 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 12:52:50,576 p=7560 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:52:50,594 p=7560 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:52:50,599 p=7560 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 12:52:51,198 p=7560 u=root |  changed: [localhost]
2018-08-30 12:52:51,205 p=7560 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 12:52:51,752 p=7560 u=root |  changed: [localhost]
2018-08-30 12:52:51,759 p=7560 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:52:51,777 p=7560 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 12:52:51,781 p=7560 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 12:52:51,811 p=7560 u=root |  ok: [localhost] => (item={u'my-grafana': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "my-grafana": "Full Control"
    }
}
2018-08-30 12:52:51,814 p=7560 u=root |  ok: [localhost] => (item={u'my-prometheus-alertmanager': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "my-prometheus-alertmanager": "Full Control"
    }
}
2018-08-30 12:52:51,818 p=7560 u=root |  ok: [localhost] => (item={u'my-prometheus-kube-state-metrics': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "my-prometheus-kube-state-metrics": "Full Control"
    }
}
2018-08-30 12:52:51,822 p=7560 u=root |  ok: [localhost] => (item={u'my-prometheus-pushgateway': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "my-prometheus-pushgateway": "Full Control"
    }
}
2018-08-30 12:52:51,826 p=7560 u=root |  ok: [localhost] => (item={u'my-prometheus-server': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "my-prometheus-server": "Full Control"
    }
}
2018-08-30 12:52:51,835 p=7560 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 12:52:51,854 p=7560 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 12:52:51,855 p=7560 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 12:52:51,856 p=7560 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 12:52:51,856 p=7560 u=root |  localhost                  : ok=16   changed=2    unreachable=0    failed=1   
2018-08-30 12:59:22,624 p=7928 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/helm/group_vars/vars': line 120, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

   - serviceaccount: my-grafana
   - role: : 'Full Control'
           ^ here

exception type: <class 'yaml.scanner.ScannerError'>
exception: mapping values are not allowed in this context
  in "<unicode string>", line 120, column 12
2018-08-30 12:59:42,612 p=7944 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/helm/group_vars/vars': line 120, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

   - serviceaccount: my-grafana
   - role: : 'Full Control'
           ^ here

exception type: <class 'yaml.scanner.ScannerError'>
exception: mapping values are not allowed in this context
  in "<unicode string>", line 120, column 12
2018-08-30 13:03:20,040 p=8040 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/helm/group_vars/vars': line 118, column 20, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

prom_sa 1
   - serviceaccount: my-grafana
                   ^ here

exception type: <class 'yaml.scanner.ScannerError'>
exception: while scanning a simple key
  in "<unicode string>", line 117, column 1
could not find expected ':'
  in "<unicode string>", line 118, column 20
2018-08-30 13:04:00,189 p=8063 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/helm/group_vars/vars': line 117, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- prom_sa 1
^ here

exception type: <class 'yaml.parser.ParserError'>
exception: while parsing a block mapping
  in "<unicode string>", line 3, column 1
did not find expected key
  in "<unicode string>", line 117, column 1
2018-08-30 13:11:35,904 p=8221 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/root/helm/group_vars/vars': line 120, column 56, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

   - { serviceaccount: my-prometheus-alertmanager,        role: 'Full Control' }
   - { serviceaccount: my-prometheus-kube-state-metrics:, role: 'Full Control' }
                                                       ^ here

exception type: <class 'yaml.scanner.ScannerError'>
exception: while scanning a plain scalar
  in "<unicode string>", line 120, column 24
found unexpected ':'
  in "<unicode string>", line 120, column 56
2018-08-30 13:14:28,456 p=8286 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:14:28,465 p=8286 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:14:28,496 p=8286 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:14:28,500 p=8286 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:14:28,517 p=8286 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:14:28,522 p=8286 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:14:28,540 p=8286 u=root |  ok: [localhost]
2018-08-30 13:14:28,550 p=8286 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:14:29,200 p=8286 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:14:29,207 p=8286 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:14:29,210 p=8286 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:14:29,219 p=8286 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:14:29,245 p=8286 u=root |  ok: [localhost]
2018-08-30 13:14:29,250 p=8286 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:14:29,283 p=8286 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:14:29,286 p=8286 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:14:29,290 p=8286 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:14:29,298 p=8286 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:14:29,320 p=8286 u=root |  skipping: [localhost]
2018-08-30 13:14:29,324 p=8286 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:14:29,837 p=8286 u=root |  ok: [localhost]
2018-08-30 13:14:29,841 p=8286 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:14:29,872 p=8286 u=root |  ok: [localhost]
2018-08-30 13:14:29,877 p=8286 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:14:30,306 p=8286 u=root |  ok: [localhost]
2018-08-30 13:14:30,309 p=8286 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:14:30,343 p=8286 u=root |  ok: [localhost]
2018-08-30 13:14:30,348 p=8286 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:14:30,363 p=8286 u=root |  skipping: [localhost]
2018-08-30 13:14:30,366 p=8286 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:14:30,387 p=8286 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:14:30,396 p=8286 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:14:30,423 p=8286 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 13:14:30,429 p=8286 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:14:31,038 p=8286 u=root |  changed: [localhost]
2018-08-30 13:14:31,042 p=8286 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:14:31,765 p=8286 u=root |  changed: [localhost]
2018-08-30 13:14:31,770 p=8286 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:14:31,798 p=8286 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 13:14:31,805 p=8286 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:14:31,831 p=8286 u=root |  ok: [localhost] => (item=serviceaccount) => {
    "changed": false, 
    "item": "serviceaccount"
}
2018-08-30 13:14:31,833 p=8286 u=root |  ok: [localhost] => (item=role) => {
    "changed": false, 
    "item": "role"
}
2018-08-30 13:14:31,840 p=8286 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:14:31,867 p=8286 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 13:14:31,869 p=8286 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:14:31,870 p=8286 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:14:31,870 p=8286 u=root |  localhost                  : ok=16   changed=2    unreachable=0    failed=1   
2018-08-30 13:17:53,078 p=8579 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:17:53,094 p=8579 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:17:53,126 p=8579 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:17:53,130 p=8579 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:17:53,147 p=8579 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:17:53,152 p=8579 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:17:53,171 p=8579 u=root |  ok: [localhost]
2018-08-30 13:17:53,180 p=8579 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:17:53,807 p=8579 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:17:53,815 p=8579 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:17:53,819 p=8579 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:17:53,824 p=8579 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:17:53,849 p=8579 u=root |  ok: [localhost]
2018-08-30 13:17:53,853 p=8579 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:17:53,880 p=8579 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:17:53,883 p=8579 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:17:53,886 p=8579 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:17:53,894 p=8579 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:17:53,910 p=8579 u=root |  skipping: [localhost]
2018-08-30 13:17:53,913 p=8579 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:17:54,444 p=8579 u=root |  ok: [localhost]
2018-08-30 13:17:54,448 p=8579 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:17:54,479 p=8579 u=root |  ok: [localhost]
2018-08-30 13:17:54,486 p=8579 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:17:54,911 p=8579 u=root |  ok: [localhost]
2018-08-30 13:17:54,914 p=8579 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:17:54,949 p=8579 u=root |  ok: [localhost]
2018-08-30 13:17:54,953 p=8579 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:17:54,973 p=8579 u=root |  skipping: [localhost]
2018-08-30 13:17:54,978 p=8579 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:17:54,998 p=8579 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:17:55,002 p=8579 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:17:55,020 p=8579 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 13:17:55,025 p=8579 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:17:55,626 p=8579 u=root |  changed: [localhost]
2018-08-30 13:17:55,631 p=8579 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:17:57,170 p=8579 u=root |  changed: [localhost]
2018-08-30 13:17:57,177 p=8579 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:17:57,203 p=8579 u=root |  ok: [localhost] => {
    "msg": "Success"
}
2018-08-30 13:17:57,209 p=8579 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:17:57,235 p=8579 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "role": "Full Control", 
        "serviceaccount": "my-grafana"
    }
}
2018-08-30 13:17:57,239 p=8579 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "role": "Full Control", 
        "serviceaccount": "my-prometheus-alertmanager"
    }
}
2018-08-30 13:17:57,243 p=8579 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "role": "Full Control", 
        "serviceaccount": "my-prometheus-kube-state-metrics"
    }
}
2018-08-30 13:17:57,246 p=8579 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "role": "Full Control", 
        "serviceaccount": "my-prometheus-pushgateway"
    }
}
2018-08-30 13:17:57,251 p=8579 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'}) => {
    "changed": false, 
    "item": {
        "role": "Full Control", 
        "serviceaccount": "my-prometheus-server"
    }
}
2018-08-30 13:17:57,260 p=8579 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:17:57,284 p=8579 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 13:17:57,285 p=8579 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:17:57,285 p=8579 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:17:57,285 p=8579 u=root |  localhost                  : ok=16   changed=2    unreachable=0    failed=1   
2018-08-30 13:26:50,238 p=9003 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/root/helm/playbooks/k8s-prom.yml': line 87, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

#
    - block:
      ^ here

2018-08-30 13:32:20,957 p=9194 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:32:20,968 p=9194 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:32:20,995 p=9194 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:32:21,000 p=9194 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:32:21,018 p=9194 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:32:21,023 p=9194 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:32:21,043 p=9194 u=root |  ok: [localhost]
2018-08-30 13:32:21,058 p=9194 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:32:21,724 p=9194 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:32:21,728 p=9194 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:32:21,732 p=9194 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:32:21,740 p=9194 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:32:21,759 p=9194 u=root |  ok: [localhost]
2018-08-30 13:32:21,763 p=9194 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:32:21,789 p=9194 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:32:21,792 p=9194 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:32:21,796 p=9194 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:32:21,802 p=9194 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:32:21,816 p=9194 u=root |  skipping: [localhost]
2018-08-30 13:32:21,818 p=9194 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:32:22,341 p=9194 u=root |  ok: [localhost]
2018-08-30 13:32:22,348 p=9194 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:32:22,379 p=9194 u=root |  ok: [localhost]
2018-08-30 13:32:22,384 p=9194 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:32:22,791 p=9194 u=root |  ok: [localhost]
2018-08-30 13:32:22,795 p=9194 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:32:22,830 p=9194 u=root |  ok: [localhost]
2018-08-30 13:32:22,837 p=9194 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:32:22,854 p=9194 u=root |  skipping: [localhost]
2018-08-30 13:32:22,859 p=9194 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:32:22,880 p=9194 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:32:22,883 p=9194 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:32:22,906 p=9194 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: unexpected '}'. String: BINARY=$1\n{% for item in prom_sa %}\n${BINARY} get serviceaccount {{ item.serviceaccount }  >/dev/null 2>&1 \nif [ $? != 0 ]\nthen\n  ${BINARY} apply -f - <<EOF\n---\n  apiVersion: v1\n  kind: ServiceAccount\n  metadata:\n    name: {{ item.serviceaccount }}\n    namespace: default\nEOF\nelse\n  echo \"Service Account {{ item.serviceaccount }} already created\"\nfi\n{% endfor %}\nunlink $0\n"}
2018-08-30 13:32:22,908 p=9194 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:32:22,908 p=9194 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:32:22,908 p=9194 u=root |  localhost                  : ok=11   changed=0    unreachable=0    failed=1   
2018-08-30 13:34:52,418 p=9378 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:34:52,437 p=9378 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:34:52,460 p=9378 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:34:52,464 p=9378 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:34:52,480 p=9378 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:34:52,485 p=9378 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:34:52,503 p=9378 u=root |  ok: [localhost]
2018-08-30 13:34:52,514 p=9378 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:34:53,155 p=9378 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:34:53,158 p=9378 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:34:53,163 p=9378 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:34:53,172 p=9378 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:34:53,199 p=9378 u=root |  ok: [localhost]
2018-08-30 13:34:53,206 p=9378 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:34:53,233 p=9378 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:34:53,236 p=9378 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:34:53,240 p=9378 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:34:53,245 p=9378 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:34:53,258 p=9378 u=root |  skipping: [localhost]
2018-08-30 13:34:53,261 p=9378 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:34:53,774 p=9378 u=root |  ok: [localhost]
2018-08-30 13:34:53,778 p=9378 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:34:53,808 p=9378 u=root |  ok: [localhost]
2018-08-30 13:34:53,813 p=9378 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:34:54,229 p=9378 u=root |  ok: [localhost]
2018-08-30 13:34:54,233 p=9378 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:34:54,268 p=9378 u=root |  ok: [localhost]
2018-08-30 13:34:54,273 p=9378 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:34:54,288 p=9378 u=root |  skipping: [localhost]
2018-08-30 13:34:54,291 p=9378 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:34:54,310 p=9378 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:34:54,315 p=9378 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:34:54,336 p=9378 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "AnsibleError: template error while templating string: unexpected '}'. String: BINARY=$1\n{% for item in prom_sa %}\n${{ '{' }}BINARY{{ '}' }} get serviceaccount {{ item.serviceaccount }  >/dev/null 2>&1 \nif [ $? != 0 ]\nthen\n  ${{ '{' }}BINARY{{ '}' }} apply -f - <<EOF\n---\n  apiVersion: v1\n  kind: ServiceAccount\n  metadata:\n    name: {{ item.serviceaccount }}\n    namespace: default\nEOF\nelse\n  echo \"Service Account {{ item.serviceaccount }} already created\"\nfi\n{% endfor %}\nunlink $0\n"}
2018-08-30 13:34:54,337 p=9378 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:34:54,337 p=9378 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:34:54,337 p=9378 u=root |  localhost                  : ok=11   changed=0    unreachable=0    failed=1   
2018-08-30 13:35:33,365 p=9498 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:35:33,374 p=9498 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:35:33,407 p=9498 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:35:33,411 p=9498 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:35:33,428 p=9498 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:35:33,433 p=9498 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:35:33,450 p=9498 u=root |  ok: [localhost]
2018-08-30 13:35:33,459 p=9498 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:35:34,084 p=9498 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:35:34,087 p=9498 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:34,091 p=9498 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:34,096 p=9498 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:35:34,118 p=9498 u=root |  ok: [localhost]
2018-08-30 13:35:34,123 p=9498 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:35:34,149 p=9498 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:35:34,152 p=9498 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:34,155 p=9498 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:34,161 p=9498 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:35:34,174 p=9498 u=root |  skipping: [localhost]
2018-08-30 13:35:34,177 p=9498 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:35:34,700 p=9498 u=root |  ok: [localhost]
2018-08-30 13:35:34,707 p=9498 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:35:34,731 p=9498 u=root |  ok: [localhost]
2018-08-30 13:35:34,736 p=9498 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:35:35,134 p=9498 u=root |  ok: [localhost]
2018-08-30 13:35:35,138 p=9498 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:35:35,166 p=9498 u=root |  ok: [localhost]
2018-08-30 13:35:35,171 p=9498 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:35:35,186 p=9498 u=root |  skipping: [localhost]
2018-08-30 13:35:35,190 p=9498 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:35:35,209 p=9498 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:35:35,213 p=9498 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:35:35,806 p=9498 u=root |  changed: [localhost]
2018-08-30 13:35:35,813 p=9498 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:35:37,346 p=9498 u=root |  changed: [localhost]
2018-08-30 13:35:37,355 p=9498 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:35:37,381 p=9498 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 13:35:37,383 p=9498 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:35:37,383 p=9498 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:35:37,383 p=9498 u=root |  localhost                  : ok=13   changed=2    unreachable=0    failed=1   
2018-08-30 13:35:56,437 p=9730 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:35:56,446 p=9730 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:35:56,476 p=9730 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:35:56,480 p=9730 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:35:56,496 p=9730 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:35:56,501 p=9730 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:35:56,518 p=9730 u=root |  ok: [localhost]
2018-08-30 13:35:56,527 p=9730 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:35:57,129 p=9730 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:35:57,136 p=9730 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:57,139 p=9730 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:57,148 p=9730 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:35:57,173 p=9730 u=root |  ok: [localhost]
2018-08-30 13:35:57,178 p=9730 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:35:57,203 p=9730 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:35:57,207 p=9730 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:57,211 p=9730 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:35:57,222 p=9730 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:35:57,239 p=9730 u=root |  skipping: [localhost]
2018-08-30 13:35:57,244 p=9730 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:35:57,770 p=9730 u=root |  ok: [localhost]
2018-08-30 13:35:57,777 p=9730 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:35:57,807 p=9730 u=root |  ok: [localhost]
2018-08-30 13:35:57,812 p=9730 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:35:58,222 p=9730 u=root |  ok: [localhost]
2018-08-30 13:35:58,226 p=9730 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:35:58,260 p=9730 u=root |  ok: [localhost]
2018-08-30 13:35:58,265 p=9730 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:35:58,280 p=9730 u=root |  skipping: [localhost]
2018-08-30 13:35:58,284 p=9730 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:35:58,304 p=9730 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:35:58,309 p=9730 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:35:58,895 p=9730 u=root |  changed: [localhost]
2018-08-30 13:35:58,903 p=9730 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:36:00,332 p=9730 u=root |  changed: [localhost]
2018-08-30 13:36:00,340 p=9730 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:36:00,363 p=9730 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed as requested from task"}
2018-08-30 13:36:00,364 p=9730 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:36:00,364 p=9730 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:36:00,365 p=9730 u=root |  localhost                  : ok=13   changed=2    unreachable=0    failed=1   
2018-08-30 13:48:01,008 p=10204 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:48:01,025 p=10204 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:48:01,064 p=10204 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:48:01,069 p=10204 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:48:01,086 p=10204 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:48:01,091 p=10204 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:48:01,109 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:01,119 p=10204 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:48:01,748 p=10204 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:48:01,753 p=10204 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:01,757 p=10204 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:01,766 p=10204 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:48:01,784 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:01,789 p=10204 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:48:01,828 p=10204 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:48:01,835 p=10204 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:01,835 p=10204 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:01,842 p=10204 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:48:01,861 p=10204 u=root |  skipping: [localhost]
2018-08-30 13:48:01,866 p=10204 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:48:02,398 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:02,406 p=10204 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:48:02,432 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:02,437 p=10204 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:48:02,844 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:02,847 p=10204 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:48:02,877 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:02,882 p=10204 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:48:02,899 p=10204 u=root |  skipping: [localhost]
2018-08-30 13:48:02,903 p=10204 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:48:02,924 p=10204 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:48:02,934 p=10204 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:48:03,542 p=10204 u=root |  ok: [localhost]
2018-08-30 13:48:03,550 p=10204 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:48:05,068 p=10204 u=root |  changed: [localhost]
2018-08-30 13:48:05,071 p=10204 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 13:48:05,098 p=10204 u=root |  fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'dict object' has no attribute 'aserviceaccount'\n\nThe error appears to have been in '/root/helm/playbooks/k8s-prom.yml': line 95, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Grant the service account with the role\n      ^ here\n\nexception type: <class 'ansible.errors.AnsibleUndefinedVariable'>\nexception: 'dict object' has no attribute 'aserviceaccount'"}
2018-08-30 13:48:05,100 p=10204 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:48:05,100 p=10204 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:48:05,101 p=10204 u=root |  localhost                  : ok=13   changed=1    unreachable=0    failed=1   
2018-08-30 13:48:22,747 p=10418 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:48:22,756 p=10418 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:48:22,785 p=10418 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:48:22,790 p=10418 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:48:22,807 p=10418 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:48:22,811 p=10418 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:48:22,830 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:22,838 p=10418 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:48:23,426 p=10418 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:48:23,429 p=10418 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:23,435 p=10418 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:23,443 p=10418 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:48:23,461 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:23,465 p=10418 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:48:23,491 p=10418 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:48:23,493 p=10418 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:23,497 p=10418 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:48:23,505 p=10418 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:48:23,519 p=10418 u=root |  skipping: [localhost]
2018-08-30 13:48:23,523 p=10418 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:48:24,043 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:24,048 p=10418 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:48:24,077 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:24,082 p=10418 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:48:24,491 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:24,495 p=10418 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:48:24,531 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:24,539 p=10418 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:48:24,560 p=10418 u=root |  skipping: [localhost]
2018-08-30 13:48:24,564 p=10418 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:48:24,583 p=10418 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:48:24,587 p=10418 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:48:25,187 p=10418 u=root |  ok: [localhost]
2018-08-30 13:48:25,195 p=10418 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:48:26,638 p=10418 u=root |  changed: [localhost]
2018-08-30 13:48:26,647 p=10418 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 13:48:27,047 p=10418 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 13:48:27,430 p=10418 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 13:48:27,795 p=10418 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 13:48:28,166 p=10418 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 13:48:28,542 p=10418 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'})
2018-08-30 13:48:28,551 p=10418 u=root |  TASK [Deploy NFS Provisioner, copy script] ****************************************************************************************************************
2018-08-30 13:48:28,572 p=10418 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Could not find or access '../templates/k8s/nfs-provisioner/deployment-sa.sh'\nSearched in:\n\t/root/helm/playbooks/templates/../templates/k8s/nfs-provisioner/deployment-sa.sh\n\t/root/helm/playbooks/../templates/k8s/nfs-provisioner/deployment-sa.sh\n\t/root/helm/playbooks/templates/../templates/k8s/nfs-provisioner/deployment-sa.sh\n\t/root/helm/playbooks/../templates/k8s/nfs-provisioner/deployment-sa.sh"}
2018-08-30 13:48:28,574 p=10418 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:48:28,574 p=10418 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:48:28,574 p=10418 u=root |  localhost                  : ok=14   changed=1    unreachable=0    failed=1   
2018-08-30 13:54:01,831 p=10948 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:54:01,842 p=10948 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:54:01,872 p=10948 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:54:01,875 p=10948 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:54:01,893 p=10948 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:54:01,897 p=10948 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:54:01,914 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:01,925 p=10948 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:54:02,526 p=10948 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:54:02,533 p=10948 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:54:02,537 p=10948 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:54:02,546 p=10948 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:54:02,569 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:02,574 p=10948 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:54:02,599 p=10948 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:54:02,602 p=10948 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:54:02,606 p=10948 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:54:02,611 p=10948 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:54:02,624 p=10948 u=root |  skipping: [localhost]
2018-08-30 13:54:02,627 p=10948 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:54:03,131 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:03,134 p=10948 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:54:03,163 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:03,169 p=10948 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:54:03,571 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:03,575 p=10948 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:54:03,610 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:03,617 p=10948 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:54:03,639 p=10948 u=root |  skipping: [localhost]
2018-08-30 13:54:03,644 p=10948 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:54:03,670 p=10948 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:54:03,677 p=10948 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:54:04,311 p=10948 u=root |  ok: [localhost]
2018-08-30 13:54:04,318 p=10948 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:54:04,670 p=10948 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "/tmp/serviceaccount.sh /tmp/kubectl", "delta": "0:00:00.015611", "end": "2018-08-30 13:54:04.644150", "msg": "non-zero return code", "rc": 127, "start": "2018-08-30 13:54:04.628539", "stderr": "/tmp/serviceaccount.sh: line 5: /tmp/kubectl: No such file or directory\n/tmp/serviceaccount.sh: line 19: /tmp/kubectl: No such file or directory\n/tmp/serviceaccount.sh: line 33: /tmp/kubectl: No such file or directory\n/tmp/serviceaccount.sh: line 47: /tmp/kubectl: No such file or directory\n/tmp/serviceaccount.sh: line 61: /tmp/kubectl: No such file or directory", "stderr_lines": ["/tmp/serviceaccount.sh: line 5: /tmp/kubectl: No such file or directory", "/tmp/serviceaccount.sh: line 19: /tmp/kubectl: No such file or directory", "/tmp/serviceaccount.sh: line 33: /tmp/kubectl: No such file or directory", "/tmp/serviceaccount.sh: line 47: /tmp/kubectl: No such file or directory", "/tmp/serviceaccount.sh: line 61: /tmp/kubectl: No such file or directory"], "stdout": "", "stdout_lines": []}
2018-08-30 13:54:04,673 p=10948 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:54:04,673 p=10948 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:54:04,673 p=10948 u=root |  localhost                  : ok=12   changed=0    unreachable=0    failed=1   
2018-08-30 13:57:34,226 p=11330 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:57:34,235 p=11330 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:57:34,264 p=11330 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:57:34,268 p=11330 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:57:34,284 p=11330 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:57:34,289 p=11330 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:57:34,306 p=11330 u=root |  ok: [localhost]
2018-08-30 13:57:34,315 p=11330 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:57:34,927 p=11330 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:57:34,935 p=11330 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:57:34,940 p=11330 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:57:34,948 p=11330 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:57:34,967 p=11330 u=root |  ok: [localhost]
2018-08-30 13:57:34,971 p=11330 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:57:34,997 p=11330 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:57:35,000 p=11330 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:57:35,004 p=11330 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:57:35,012 p=11330 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:57:35,028 p=11330 u=root |  skipping: [localhost]
2018-08-30 13:57:35,032 p=11330 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:57:35,545 p=11330 u=root |  ok: [localhost]
2018-08-30 13:57:35,551 p=11330 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:57:35,577 p=11330 u=root |  ok: [localhost]
2018-08-30 13:57:35,582 p=11330 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:57:35,977 p=11330 u=root |  ok: [localhost]
2018-08-30 13:57:35,980 p=11330 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:57:36,015 p=11330 u=root |  ok: [localhost]
2018-08-30 13:57:36,022 p=11330 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:57:36,038 p=11330 u=root |  skipping: [localhost]
2018-08-30 13:57:36,042 p=11330 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:57:36,061 p=11330 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:57:36,068 p=11330 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 13:57:36,089 p=11330 u=root |  An exception occurred during task execution. To see the full traceback, use -vvv. The error was: 	/root/helm/playbooks/../files/k8s/client/kubectl
2018-08-30 13:57:36,090 p=11330 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Could not find or access '../files/k8s/client/kubectl'\nSearched in:\n\t/root/helm/playbooks/files/../files/k8s/client/kubectl\n\t/root/helm/playbooks/../files/k8s/client/kubectl\n\t/root/helm/playbooks/files/../files/k8s/client/kubectl\n\t/root/helm/playbooks/../files/k8s/client/kubectl"}
2018-08-30 13:57:36,091 p=11330 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:57:36,091 p=11330 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:57:36,091 p=11330 u=root |  localhost                  : ok=11   changed=0    unreachable=0    failed=1   
2018-08-30 13:58:18,567 p=11475 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 13:58:18,577 p=11475 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:58:18,608 p=11475 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 13:58:18,612 p=11475 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 13:58:18,630 p=11475 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 13:58:18,636 p=11475 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 13:58:18,659 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:18,668 p=11475 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 13:58:19,299 p=11475 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:58:19,307 p=11475 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:58:19,312 p=11475 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:58:19,319 p=11475 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:58:19,338 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:19,342 p=11475 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 13:58:19,371 p=11475 u=root |  ok: [localhost] => (item=None)
2018-08-30 13:58:19,373 p=11475 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:58:19,376 p=11475 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 13:58:19,384 p=11475 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:58:19,399 p=11475 u=root |  skipping: [localhost]
2018-08-30 13:58:19,403 p=11475 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 13:58:19,924 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:19,932 p=11475 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 13:58:19,960 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:19,965 p=11475 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 13:58:20,384 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:20,388 p=11475 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 13:58:20,422 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:20,428 p=11475 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 13:58:20,445 p=11475 u=root |  skipping: [localhost]
2018-08-30 13:58:20,452 p=11475 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 13:58:20,474 p=11475 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 13:58:20,482 p=11475 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 13:58:21,356 p=11475 u=root |  changed: [localhost]
2018-08-30 13:58:21,365 p=11475 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 13:58:21,896 p=11475 u=root |  ok: [localhost]
2018-08-30 13:58:21,904 p=11475 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 13:58:24,322 p=11475 u=root |  changed: [localhost]
2018-08-30 13:58:24,331 p=11475 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 13:58:24,740 p=11475 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 13:58:25,130 p=11475 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 13:58:25,584 p=11475 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 13:58:25,961 p=11475 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 13:58:26,330 p=11475 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'})
2018-08-30 13:58:26,339 p=11475 u=root |  TASK [Deploy NFS Provisioner, copy script] ****************************************************************************************************************
2018-08-30 13:58:26,360 p=11475 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "msg": "Could not find or access '../templates/k8s/nfs-provisioner/deployment-sa.sh'\nSearched in:\n\t/root/helm/playbooks/templates/../templates/k8s/nfs-provisioner/deployment-sa.sh\n\t/root/helm/playbooks/../templates/k8s/nfs-provisioner/deployment-sa.sh\n\t/root/helm/playbooks/templates/../templates/k8s/nfs-provisioner/deployment-sa.sh\n\t/root/helm/playbooks/../templates/k8s/nfs-provisioner/deployment-sa.sh"}
2018-08-30 13:58:26,361 p=11475 u=root |  	to retry, use: --limit @/root/helm/playbooks/k8s-prom.retry

2018-08-30 13:58:26,361 p=11475 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 13:58:26,361 p=11475 u=root |  localhost                  : ok=15   changed=2    unreachable=0    failed=1   
2018-08-30 14:06:02,120 p=12166 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 14:06:02,130 p=12166 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 14:06:02,160 p=12166 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 14:06:02,164 p=12166 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 14:06:02,181 p=12166 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 14:06:02,186 p=12166 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 14:06:02,206 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:02,215 p=12166 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 14:06:02,860 p=12166 u=root |  ok: [localhost] => (item=None)
2018-08-30 14:06:02,864 p=12166 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 14:06:02,869 p=12166 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 14:06:02,877 p=12166 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 14:06:02,904 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:02,908 p=12166 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 14:06:02,936 p=12166 u=root |  ok: [localhost] => (item=None)
2018-08-30 14:06:02,939 p=12166 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 14:06:02,941 p=12166 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 14:06:02,950 p=12166 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 14:06:02,963 p=12166 u=root |  skipping: [localhost]
2018-08-30 14:06:02,966 p=12166 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 14:06:03,496 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:03,503 p=12166 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 14:06:03,533 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:03,539 p=12166 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 14:06:03,967 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:03,970 p=12166 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 14:06:03,999 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:04,005 p=12166 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 14:06:04,022 p=12166 u=root |  skipping: [localhost]
2018-08-30 14:06:04,026 p=12166 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 14:06:04,048 p=12166 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 14:06:04,058 p=12166 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 14:06:04,799 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:04,804 p=12166 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 14:06:05,194 p=12166 u=root |  ok: [localhost]
2018-08-30 14:06:05,198 p=12166 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 14:06:06,697 p=12166 u=root |  changed: [localhost]
2018-08-30 14:06:06,703 p=12166 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 14:06:07,096 p=12166 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 14:06:07,470 p=12166 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 14:06:07,833 p=12166 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 14:06:08,173 p=12166 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 14:06:08,539 p=12166 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'})
2018-08-30 14:06:08,550 p=12166 u=root |  TASK [Deploy Prometheus - copy script] ********************************************************************************************************************
2018-08-30 14:06:09,056 p=12166 u=root |  changed: [localhost]
2018-08-30 14:06:09,064 p=12166 u=root |  TASK [Deploy Prometheus - run script] *********************************************************************************************************************
2018-08-30 14:06:10,472 p=12166 u=root |  changed: [localhost]
2018-08-30 14:06:10,476 p=12166 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 14:06:10,476 p=12166 u=root |  localhost                  : ok=17   changed=3    unreachable=0    failed=0   
2018-08-30 15:18:01,613 p=660 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 15:18:01,624 p=660 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 15:18:01,655 p=660 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 15:18:01,662 p=660 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 15:18:01,684 p=660 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 15:18:01,689 p=660 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 15:18:01,708 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:01,721 p=660 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 15:18:02,367 p=660 u=root |  ok: [localhost] => (item=None)
2018-08-30 15:18:02,371 p=660 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 15:18:02,375 p=660 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 15:18:02,382 p=660 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 15:18:02,408 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:02,414 p=660 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 15:18:02,442 p=660 u=root |  ok: [localhost] => (item=None)
2018-08-30 15:18:02,445 p=660 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 15:18:02,449 p=660 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 15:18:02,460 p=660 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 15:18:02,482 p=660 u=root |  skipping: [localhost]
2018-08-30 15:18:02,486 p=660 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 15:18:03,010 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:03,018 p=660 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 15:18:03,043 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:03,048 p=660 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 15:18:03,468 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:03,472 p=660 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 15:18:03,508 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:03,515 p=660 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 15:18:03,532 p=660 u=root |  skipping: [localhost]
2018-08-30 15:18:03,535 p=660 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 15:18:03,554 p=660 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 15:18:03,560 p=660 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 15:18:04,329 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:04,334 p=660 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 15:18:04,875 p=660 u=root |  changed: [localhost]
2018-08-30 15:18:04,880 p=660 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 15:18:07,205 p=660 u=root |  changed: [localhost]
2018-08-30 15:18:07,212 p=660 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 15:18:07,664 p=660 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 15:18:08,043 p=660 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 15:18:08,447 p=660 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 15:18:08,847 p=660 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 15:18:09,246 p=660 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'})
2018-08-30 15:18:09,256 p=660 u=root |  TASK [Deploy Prometheus - copy script] ********************************************************************************************************************
2018-08-30 15:18:09,697 p=660 u=root |  ok: [localhost]
2018-08-30 15:18:09,707 p=660 u=root |  TASK [Deploy Prometheus - run script] *********************************************************************************************************************
2018-08-30 15:18:11,071 p=660 u=root |  changed: [localhost]
2018-08-30 15:18:11,075 p=660 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 15:18:11,075 p=660 u=root |  localhost                  : ok=17   changed=3    unreachable=0    failed=0   
2018-08-30 17:29:21,552 p=4275 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 17:29:21,561 p=4275 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:29:21,588 p=4275 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 17:29:21,593 p=4275 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 17:29:21,609 p=4275 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 17:29:21,614 p=4275 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 17:29:21,632 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:21,642 p=4275 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 17:29:22,264 p=4275 u=root |  ok: [localhost] => (item=None)
2018-08-30 17:29:22,274 p=4275 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:29:22,281 p=4275 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:29:22,288 p=4275 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 17:29:22,314 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:22,321 p=4275 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 17:29:22,354 p=4275 u=root |  ok: [localhost] => (item=None)
2018-08-30 17:29:22,357 p=4275 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:29:22,361 p=4275 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:29:22,370 p=4275 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:29:22,385 p=4275 u=root |  skipping: [localhost]
2018-08-30 17:29:22,388 p=4275 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 17:29:22,922 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:22,929 p=4275 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 17:29:22,951 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:22,955 p=4275 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 17:29:23,347 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:23,350 p=4275 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 17:29:23,385 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:23,391 p=4275 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 17:29:23,414 p=4275 u=root |  skipping: [localhost]
2018-08-30 17:29:23,418 p=4275 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:29:23,438 p=4275 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 17:29:23,444 p=4275 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 17:29:24,183 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:24,192 p=4275 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 17:29:24,584 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:24,588 p=4275 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 17:29:26,773 p=4275 u=root |  changed: [localhost]
2018-08-30 17:29:26,780 p=4275 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 17:29:27,184 p=4275 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 17:29:27,550 p=4275 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 17:29:27,942 p=4275 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 17:29:28,316 p=4275 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 17:29:28,702 p=4275 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'})
2018-08-30 17:29:28,710 p=4275 u=root |  TASK [Deploy Prometheus - copy script] ********************************************************************************************************************
2018-08-30 17:29:29,115 p=4275 u=root |  ok: [localhost]
2018-08-30 17:29:29,124 p=4275 u=root |  TASK [Deploy Prometheus - run script] *********************************************************************************************************************
2018-08-30 17:29:30,761 p=4275 u=root |  changed: [localhost]
2018-08-30 17:29:30,765 p=4275 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 17:29:30,765 p=4275 u=root |  localhost                  : ok=17   changed=2    unreachable=0    failed=0   
2018-08-30 17:35:02,483 p=5095 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 17:35:02,495 p=5095 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:35:02,525 p=5095 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 17:35:02,530 p=5095 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 17:35:02,548 p=5095 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 17:35:02,553 p=5095 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 17:35:02,570 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:02,579 p=5095 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 17:35:03,249 p=5095 u=root |  ok: [localhost] => (item=None)
2018-08-30 17:35:03,255 p=5095 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:35:03,261 p=5095 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:35:03,269 p=5095 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 17:35:03,288 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:03,297 p=5095 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 17:35:03,326 p=5095 u=root |  ok: [localhost] => (item=None)
2018-08-30 17:35:03,327 p=5095 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:35:03,331 p=5095 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:35:03,338 p=5095 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:35:03,351 p=5095 u=root |  skipping: [localhost]
2018-08-30 17:35:03,357 p=5095 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 17:35:03,869 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:03,875 p=5095 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 17:35:03,897 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:03,901 p=5095 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 17:35:04,309 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:04,312 p=5095 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 17:35:04,347 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:04,355 p=5095 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 17:35:04,371 p=5095 u=root |  skipping: [localhost]
2018-08-30 17:35:04,375 p=5095 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:35:04,395 p=5095 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 17:35:04,400 p=5095 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 17:35:05,162 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:05,170 p=5095 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 17:35:05,604 p=5095 u=root |  ok: [localhost]
2018-08-30 17:35:05,608 p=5095 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 17:35:07,988 p=5095 u=root |  changed: [localhost]
2018-08-30 17:35:07,997 p=5095 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 17:35:08,388 p=5095 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 17:35:08,756 p=5095 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 17:35:09,139 p=5095 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 17:35:09,513 p=5095 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 17:35:09,917 p=5095 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-prometheus-server', u'role': u'Full Control'})
2018-08-30 17:35:09,929 p=5095 u=root |  TASK [Deploy Prometheus - copy script] ********************************************************************************************************************
2018-08-30 17:35:10,445 p=5095 u=root |  changed: [localhost]
2018-08-30 17:35:10,452 p=5095 u=root |  TASK [Deploy Prometheus - run script] *********************************************************************************************************************
2018-08-30 17:35:11,910 p=5095 u=root |  changed: [localhost]
2018-08-30 17:35:11,913 p=5095 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 17:35:11,913 p=5095 u=root |  localhost                  : ok=17   changed=3    unreachable=0    failed=0   
2018-08-30 17:52:54,961 p=6522 u=root |  PLAY [local] **********************************************************************************************************************************************
2018-08-30 17:52:54,971 p=6522 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:52:55,005 p=6522 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 17:52:55,012 p=6522 u=root |  TASK [include_tasks] **************************************************************************************************************************************
2018-08-30 17:52:55,030 p=6522 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 17:52:55,035 p=6522 u=root |  TASK [Find UCP: Init] *************************************************************************************************************************************
2018-08-30 17:52:55,052 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:55,062 p=6522 u=root |  TASK [check] **********************************************************************************************************************************************
2018-08-30 17:52:55,709 p=6522 u=root |  ok: [localhost] => (item=None)
2018-08-30 17:52:55,719 p=6522 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:52:55,722 p=6522 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:52:55,731 p=6522 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 17:52:55,757 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:55,762 p=6522 u=root |  TASK [set ucp_instance] ***********************************************************************************************************************************
2018-08-30 17:52:55,791 p=6522 u=root |  ok: [localhost] => (item=None)
2018-08-30 17:52:55,795 p=6522 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:52:55,798 p=6522 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 17:52:55,809 p=6522 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:52:55,824 p=6522 u=root |  skipping: [localhost]
2018-08-30 17:52:55,827 p=6522 u=root |  TASK [Retrieve a token for the UCP API] *******************************************************************************************************************
2018-08-30 17:52:56,339 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:56,346 p=6522 u=root |  TASK [Remember the token] *********************************************************************************************************************************
2018-08-30 17:52:56,376 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:56,381 p=6522 u=root |  TASK [List all roles] *************************************************************************************************************************************
2018-08-30 17:52:56,778 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:56,782 p=6522 u=root |  TASK [set_fact] *******************************************************************************************************************************************
2018-08-30 17:52:56,814 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:56,820 p=6522 u=root |  TASK [fail] ***********************************************************************************************************************************************
2018-08-30 17:52:56,834 p=6522 u=root |  skipping: [localhost]
2018-08-30 17:52:56,837 p=6522 u=root |  TASK [debug] **********************************************************************************************************************************************
2018-08-30 17:52:56,864 p=6522 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 17:52:56,868 p=6522 u=root |  TASK [Copy kubectl client] ********************************************************************************************************************************
2018-08-30 17:52:57,582 p=6522 u=root |  ok: [localhost]
2018-08-30 17:52:57,585 p=6522 u=root |  TASK [Create Service Account, copy script] ****************************************************************************************************************
2018-08-30 17:52:58,118 p=6522 u=root |  changed: [localhost]
2018-08-30 17:52:58,125 p=6522 u=root |  TASK [Create Service Account, run script] *****************************************************************************************************************
2018-08-30 17:53:00,704 p=6522 u=root |  changed: [localhost]
2018-08-30 17:53:00,712 p=6522 u=root |  TASK [Grant the service account with the role] ************************************************************************************************************
2018-08-30 17:53:01,107 p=6522 u=root |  ok: [localhost] => (item={u'serviceaccount': u'my-grafana', u'role': u'Full Control'})
2018-08-30 17:53:01,508 p=6522 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-node-exporter', u'role': u'Full Control'})
2018-08-30 17:53:01,866 p=6522 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 17:53:02,247 p=6522 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 17:53:02,598 p=6522 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 17:53:02,946 p=6522 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-server', u'role': u'Full Control'})
2018-08-30 17:53:02,955 p=6522 u=root |  PLAY RECAP ************************************************************************************************************************************************
2018-08-30 17:53:02,956 p=6522 u=root |  localhost                  : ok=15   changed=2    unreachable=0    failed=0   
2018-08-30 19:39:57,980 p=28277 u=root |  PLAY [local] ***************************************************************************************************************************************************
2018-08-30 19:39:57,998 p=28277 u=root |  TASK [debug] ***************************************************************************************************************************************************
2018-08-30 19:39:58,030 p=28277 u=root |  ok: [localhost] => {
    "msg": "Starting Playbook k8s-prom.yml"
}
2018-08-30 19:39:58,034 p=28277 u=root |  TASK [include_tasks] *******************************************************************************************************************************************
2018-08-30 19:39:58,052 p=28277 u=root |  included: /root/helm/playbooks/includes/find_ucp.yml for localhost
2018-08-30 19:39:58,057 p=28277 u=root |  TASK [Find UCP: Init] ******************************************************************************************************************************************
2018-08-30 19:39:58,076 p=28277 u=root |  ok: [localhost]
2018-08-30 19:39:58,086 p=28277 u=root |  TASK [check] ***************************************************************************************************************************************************
2018-08-30 19:39:58,781 p=28277 u=root |  ok: [localhost] => (item=None)
2018-08-30 19:39:58,789 p=28277 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 19:39:58,794 p=28277 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 19:39:58,800 p=28277 u=root |  TASK [set_fact] ************************************************************************************************************************************************
2018-08-30 19:39:58,819 p=28277 u=root |  ok: [localhost]
2018-08-30 19:39:58,823 p=28277 u=root |  TASK [set ucp_instance] ****************************************************************************************************************************************
2018-08-30 19:39:58,852 p=28277 u=root |  ok: [localhost] => (item=None)
2018-08-30 19:39:58,855 p=28277 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 19:39:58,859 p=28277 u=root |  skipping: [localhost] => (item=None) 
2018-08-30 19:39:58,866 p=28277 u=root |  TASK [debug] ***************************************************************************************************************************************************
2018-08-30 19:39:58,880 p=28277 u=root |  skipping: [localhost]
2018-08-30 19:39:58,884 p=28277 u=root |  TASK [Retrieve a token for the UCP API] ************************************************************************************************************************
2018-08-30 19:39:59,420 p=28277 u=root |  ok: [localhost]
2018-08-30 19:39:59,425 p=28277 u=root |  TASK [Remember the token] **************************************************************************************************************************************
2018-08-30 19:39:59,449 p=28277 u=root |  ok: [localhost]
2018-08-30 19:39:59,455 p=28277 u=root |  TASK [List all roles] ******************************************************************************************************************************************
2018-08-30 19:39:59,888 p=28277 u=root |  ok: [localhost]
2018-08-30 19:39:59,892 p=28277 u=root |  TASK [set_fact] ************************************************************************************************************************************************
2018-08-30 19:39:59,924 p=28277 u=root |  ok: [localhost]
2018-08-30 19:39:59,930 p=28277 u=root |  TASK [fail] ****************************************************************************************************************************************************
2018-08-30 19:39:59,946 p=28277 u=root |  skipping: [localhost]
2018-08-30 19:39:59,950 p=28277 u=root |  TASK [debug] ***************************************************************************************************************************************************
2018-08-30 19:39:59,970 p=28277 u=root |  ok: [localhost] => {
    "prom_role[0].id": "fullcontrol"
}
2018-08-30 19:39:59,977 p=28277 u=root |  TASK [Copy kubectl client] *************************************************************************************************************************************
2018-08-30 19:40:00,760 p=28277 u=root |  ok: [localhost]
2018-08-30 19:40:00,769 p=28277 u=root |  TASK [Create Service Account, copy script] *********************************************************************************************************************
2018-08-30 19:40:01,319 p=28277 u=root |  changed: [localhost]
2018-08-30 19:40:01,328 p=28277 u=root |  TASK [Create Service Account, run script] **********************************************************************************************************************
2018-08-30 19:40:04,157 p=28277 u=root |  changed: [localhost]
2018-08-30 19:40:04,166 p=28277 u=root |  TASK [Grant the service account with the role] *****************************************************************************************************************
2018-08-30 19:40:04,572 p=28277 u=root |  ok: [localhost] => (item={u'serviceaccount': u'grafana', u'role': u'Full Control'})
2018-08-30 19:40:04,940 p=28277 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-node-exporter', u'role': u'Full Control'})
2018-08-30 19:40:05,342 p=28277 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-alertmanager', u'role': u'Full Control'})
2018-08-30 19:40:05,729 p=28277 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-kube-state-metrics', u'role': u'Full Control'})
2018-08-30 19:40:06,138 p=28277 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-pushgateway', u'role': u'Full Control'})
2018-08-30 19:40:06,503 p=28277 u=root |  ok: [localhost] => (item={u'serviceaccount': u'prometheus-server', u'role': u'Full Control'})
2018-08-30 19:40:06,516 p=28277 u=root |  PLAY RECAP *****************************************************************************************************************************************************
2018-08-30 19:40:06,516 p=28277 u=root |  localhost                  : ok=15   changed=2    unreachable=0    failed=0   
