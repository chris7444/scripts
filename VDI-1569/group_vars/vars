---
# VMware configuration
vcenter_hostname: 'vcenter.cloudra.local'
vcenter_username: 'administrator@synergy.local'
vcenter_validate_certs: 'no'
datacenter: 'DC_CLH'
vm_username: 'root'
vm_template: 'syn-tpl-rhel740'
vm_portgroup: 'dpgVLAN60'

# the folder name is understood relative to the selected datacenter
folder_name: '/clh'
datastores: ['Docker2_CLH']
disk2: '/dev/sdb'
disk2_part: '/dev/sdb1'
vsphere_plugin_version: '0.21' 

# enable_windows: if defined true the creatation of windows 2016 worker nodes will be actioned, default is false
enable_windows: true
win_vm_template: 'clh-win-1607'
win_username: 'Administrator'
windows_vdvs_ps: 'https://raw.githubusercontent.com/vmware/vsphere-storage-for-docker/master/install-vdvs.ps1'
windows_vdvs_path: 'https://vmware.bintray.com/vDVS/vsphere-storage-for-docker_windows'
windows_vdvs_version: '0.21' # was 0.17
windows_vdvs_directory: 'C:\Users\Administrator\Downloads\'

# Networking
nic_name: 'ens192'
gateway: '10.60.0.1'
dns: ['10.60.50.106']
domain_name: 'cloudra.local'
ntp_servers: ['10.60.1.123','0.us.pool.net.org','1.us.pool.net.org']

# Docker configuration
# k8s_enabled: 'true'
# docker_ee_url: is defined in group_vars/vault, should be kept secret
#
# by default, the latest, stable version of docker-ee is installed, but you can specify the version you want (which is recommended)
#docker_ee_version: 'docker-ee-17.06.2.ee.16-3.el7.x86_64'
rhel_version: '7.5'
dtr_version: '2.5.3'
ucp_version: '3.0.4'
images_folder: '/docker-images'
license_file: '/root/license.lic'
ucp_username: 'admin'

#
# cidr to use for pod IP adresses
#
#k8s_pod_cidr: 192.168.128.0/17

#
# certs dir
#
# if this variables are defined, they must point to a folder on the ansible box containing 3 files that the user should supply
#    ca.pem is the file contaning the root CA certificate
#    cert.pem is the file containing the server (UCP) certificate followed bythe chain of intermediate CA' certificates (if any)
#    key.pem, contains the private key
#
# There is one folder for UCP, one folder for DTR
#
# if ucp_certs_dir is not defined, UCP generates self-signed certificates
# if dtr_certs_dir is undefined, DTR is installed using the --ucp-insecure-tls switch

ucp_certs_dir: '/root/certs/ucp_certs' 
dtr_certs_dir: '/root/certs/dtr_certs'

# Monitoring configuration
cadvisor_version: 'v0.28.3'
node_exporter_version: 'v1.15.0'
prometheus_version: 'v2.3.2'
grafana_version: '5.2.3'
#prom_persistent_vol_name: 'prom-db-data'
#prom_persistent_vol_size: '10GB'

#cadvisor_version: 'latest'
#node_exporter_version: 'latest'
#prometheus_version: 'latest'
#grafana_version: 'latest'
prom_persistent_vol_name: 'prom-db-data'
prom_persistent_vol_size: '10GB'

# Central Logging configuration
logspout_version: 'v3.2.4'

# Environment configuration
# Leave proxy settings empty if proxy is not required
env:
  dummy: 'keep me here'
#  http_proxy: 'proxy.cloudra.local:8080'
#  https_proxy: 'proxy.cloudra.local:8080'
#  no_proxy: '/var/run/docker.sock,localhost,.cloudra.local'

#
# splunk stuff
#
monitoring_stack: splunk_demo
#splunk_ssl: yes
splunk_architecture_forward_servers:
  - clh2-ansible.cloudra.local:9997

sysdig_tags: 'location:Grenoble,role:Enterprise CaaS on Synergy,owner:Christophe'
sysdig_agent: 'https://s3.amazonaws.com/download.draios.com/stable/install-agent'
sysdig_restricted_control_role: 'Restricted Control'
k8s_cluster: 'ucp_clh-ucp.cloudra.local'


#k8s nfs provisionner role name
nfs_provisioner_role: 'nfs-provisioner-runner'
nfs_provisioner_name: "hpe.com/nfs"
nfs_provisioner_storage_class_name: "nfs"
#nfs_provisioner_server_ip: vfs3par.cloudra.local
#nfs_provisioner_server_share: '/vfs3par/vfs3par/fs_clh/share'
nfs_provisioner_server_ip: 10.60.59.20
nfs_provisioner_server_share: '/vfs1/vfs1/fstore1/share'

prom_sa:
  - serviceaccount: grafana
    role: 'Full Control'
  - serviceaccount: prometheus-node-exporter
    role: 'Full Control'
  - serviceaccount: prometheus-alertmanager
    role: 'Full Control'
  - serviceaccount: prometheus-kube-state-metrics
    role: 'Full Control'
  - serviceaccount: prometheus-pushgateway
    role: 'Full Control'
  - serviceaccount: prometheus-server
    role: 'Full Control'
prom_provisioner_role: 'Full Control'
